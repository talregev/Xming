<?xml version="1.0" encoding="iso-8859-1"?>

<!-- DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" '/usr/share/sgml/docbook_4.2/docbookx.dtd' -->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 'http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd' [
  <!NOTATION URL PUBLIC "-//IETF//NOTATION Uniform Resource Locator//EN">
  <!ENTITY % local.ulink.attrib '
  HyTime CDATA #FIXED "clink"
  HyNames CDATA #FIXED "linkend URL"
  loctype CDATA #FIXED "URL queryloc URL"'
  >
  <!ENTITY % local.link.attrib '
  HyTime CDATA #FIXED "clink"
  HyNames CDATA #FIXED "linkend linkend"'
  > 
] >
<?xml-stylesheet href="docbook.css" type="text/css"?>

<!--

Convert this document to HTML using:
% xsltproc /usr/share/sgml/docbook/docbook-xsl-stylesheets-1.60.1/html/docbook.xsl Xprint_FAQ.xml >Xprint_FAQ.html

Check for errors:
% xmllint &dash;&dash;valid Xprint_FAQ.xml > /dev/null 2>errorlog.txt

Mappings used in this DocBook document:
- shell environment variable (like "foobar"):    <envar>foobar</envar>
- Xprint printer name (like "ps003"):

-->


<article class="faq">
<articleinfo>
  <title>Xprint Frequently Asked Questions</title>
</articleinfo>

<abstract id="about">
  <title>About this FAQ</title>
  <para>
    Archive-name: Xprint/FAQ
  </para>
  <para>
    Version: 0.9.1
  </para>
  <para>
    Last-Modified: 2004/10/08 01:05:21
  </para>
  <para>
    Maintained-by:
    <othercredit><firstname>Roland</firstname> <surname>Mainz</surname></othercredit>
    <email>roland.mainz@nrubsig.org</email>
  </para>

  <para>
    The following is a list of questions that are frequently asked about
    Xprint.
  </para>
  <para>
    You can help make it an even better-quality FAQ by writing a short
    contribution or update and sending it BY EMAIL ONLY to me.
    A contribution should consist of a question and an answer, and increasing
    number of people sends me contributions of the form "I don't know the
    answer to this, but it must be a FAQ, please answer it for me". Please
    read the FAQ first (including the item "<link linkend="getting_help">Getting Help</link>")
    and then feel free to ask me if it is not in the FAQ.
  </para>
  <para>
    Thanks!
  </para>

  <para>
    The latest Xprint FAQ and some other goodies can be obtained through http from
    <ulink url="http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/*checkout*/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.html">
    http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/*checkout*/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.html
    </ulink>
    or
    <ulink url="http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/*checkout*/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.txt">
    http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/*checkout*/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.txt
    </ulink>
    (the DocBook/XML master source file is
    <ulink url="http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.xml">
    http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/xorg/xc/doc/hardcopy/XPRINT/Xprint_FAQ.xml
    </ulink>).
  </para>
  <para>
  <note>
    <para>
      Note that the FAQ has not been finished yet (nor is it half-finished...),
      many items marked with "XXX" as the answer have still to be written (or have
      to be copy&amp;pasted from my item collection... <literal>:)</literal>
    </para>
  </note>
  </para>
</abstract>

<simplesect id="faq">
  <title>Frequently Asked Questions with Answers</title>
  <qandaset defaultlabel="qanda">
    <qandadiv id="faq_general">
      <title>General</title>

<qandaentry id="what_is_xprint">
  <question>
    <para>
      What is "Xprint" ?
    </para>
  </question>
  <answer>
    <para>
      In short, "Xprint" is an advanced printing system which enables X11
      applications to use devices like printers, FAX or create documents in
      formats like PostScript, PDF or SVGprint.
    </para>
    <para>
      In long, "Xprint" is a very flexible, extensible, scaleable, client/server
      print system based on ISO 10175 (and some other specs) and the X11
      rendering protocol.
      Using Xprint an application can search, query and use devices like
      printers, FAX machines or create documents in formats like PDF or SVGprint.
      In particular, an application can seek a printer, query supported
      attributes (like paper size, trays, fonts etc.), configure the printer
      device to match it's needs and print on it like on any other X device
      reusing parts of the code which is used for the video card Xserver...
    </para>
  </answer>
</qandaentry>

<qandaentry id="where_can_i_get_xprint_from">
  <question>
    <para>
      Where can I get Xprint/Xprt from ?
    </para>
  </question>
  <answer>
    <para>
      Xprint is client-server based, therefore two answers:
      <itemizedlist>
        <listitem>
          <para>
            The server side is available by default on Solaris (see
            <link linkend="where_can_i_get_xprint_from_giswxprint_package_note">Note</link>
            below) and HP-UX (Xfree86 ships a "Xprt" binary, but that is broken and the server config files
            are missing, too).
            For those platforms who do not have a (working) Xprt server the you
            can get source, binary tarballs and Linux RPMs from
            <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>,
            Debian Linux has a package based on the
            same sources (see
            <ulink url="http://packages.qa.debian.org/x/xprint-xprintorg.html">http://packages.qa.debian.org/x/xprint-xprintorg.html</ulink>).

            <note id="where_can_i_get_xprint_from_giswxprint_package_note">
              <para>
                For Solaris &gt;= 2.7 <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>
                provides the "GISWxprintglue"
                and "GISWxprint" packages (available from
                <ulink url="http://xprint.mozdev.org/download.html">http://xprint.mozdev.org/download.html</ulink>)
                which provides a single-step
                drop-in way to configure and start Xprint at system startup and/or
                per-user for all applications and users (the package provides only
                startup scripts and some config data and uses the Xprt binary provided
                with Solaris (<filename>/usr/openwin/bin/Xprt</filename>)).
              </para>
            </note>
          </para>
        </listitem>
        <listitem>
          <para>
            The client-side Xprint support library (<filename>libXp.so</filename>) is available on all
            X11 platforms &gt;=R6.4, including Linux, Solaris, HP-UX, AIX, FreeBSD, NetBSD, etc.
          </para>
          <para>
            If you do not have it you can build it from the sources available at
            <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="what_is_xprt">
  <question>
    <para>
      What is "Xprt" ?
    </para>
  </question>
  <answer>
    <para>
      Xprt is the server-side of Xprint. It's just like any other Xserver - it
      uses only an other kind of output device (printer instead of framebuffer)
      and implements an extra X11 extension ("XpExtension") to handle the
      special features/requirements of a "paged device"(=printer etc.).
    </para>
  </answer>
</qandaentry>

<qandaentry id="getting_help">
  <question>
    <para>
      Where can I get help for problems with Xprint ?
    </para>
  </question>
  <answer>
    <para>
      The current main site for the Xprint development is <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>
      which hosts various resources including a <ulink url="http://xprint.mozdev.org/list.html">mailinglist</ulink>
      (please subscribe before posting) for end-users, admin and developers.
    </para>
  </answer>
</qandaentry>

<qandaentry id="advantages_of_xprint">
  <question>
    <para>
      "Why do some people like Xprint ?" / "What are the advantages of Xprint ?"
    </para>
  </question>
  <answer>
    <para>
      <itemizedlist>
        <listitem>
          <para>
            Xprint allows an application to query what features (paper size, trays,
            orientation, resolutions, plexes, fonts and much more) a printer supports.
            For example it is avoidable that a user accidently prints DIN-A4 on a
            DIN-A0 poster printer (the print dialog would only offer DIN-A0 as paper
            size, e.g. offers only choices which are valid for this printer).
          </para>
        </listitem>
        <listitem>
          <para>
            Server-side, localizeable configuration - changes to the server
            config apply to all users without the need to change/updating anything
            on the user side (the user may still start his/her own Xprt instance
            using his/her preferred configuration).
          </para>
        </listitem>
        <listitem>
          <para>
            Small footprint - ideal for for mobile devices (client side does not
            need to process any fonts - that's the job of the server side).
          </para>
        </listitem>
        <listitem>
          <para>
            API not restriced to PostScript (X11R6.5.1 comes with PCL and Raster
            implementations - and PDF/G3-FAX/SVG would be possible without problems).
          </para>
        </listitem>
        <listitem>
          <para>
            Scaleable - Xprint can use as many Xprt servers as the user/admin wants.
          </para>
        </listitem>
        <listitem>
          <para>
            "Xprint is designed for the enterprise", e.g. Xprint was designed to
            match the needs of large company networks.
          </para>
        </listitem>
        <listitem>
          <para>
            Automatic font handling - font download or the existence of
            printer-builtin fonts is automagically handled by Xprt - the application
            does not need to know/handle any details (but the application can
            optionally get information and control the usage of printer builtin
            fonts).
          </para>
        </listitem>
        <listitem>
          <para>
            You can print anything what you can render on the framebuffer(=video
            card) Xserver.
          </para>
        </listitem>
        <listitem>
          <para>
            Existing code can be reused 1:1 for printing - which means reduced
            development costs.
          </para>
        </listitem>
        <listitem>
          <para>
            Easy support for I18N (internationalization) - you simply render any
            fonts in any language with Xprint.
          </para>
        </listitem>
        <listitem>
          <para>
            Network-transparent design - Client can use local or remote Xprt servers
            like any other Xserver.
          </para>
        </listitem>
        <listitem>
          <para>
            Uses the X11 protocol - easy adoption of existing code to implement
            printer support. And all the network goodies like firewall proxies,
            compressors etc. can be used for Xprint without modifications.
          </para>
        </listitem>
        <listitem>
          <para>
            Security: Xprint can use all authentification schemes available in X11
            (like Kerberos5, SecureRPC, MIT-MAGIC-COOKIE or host-based
            authentification).
          </para>
        </listitem>
        <listitem>
          <para>
            Enhachements on the server side (Xprt) to not require the change of
            client-side code.
          </para>
        </listitem>
        <listitem>
          <para>
            Optimized job output (like the PostScript created by the PostScript DDX)
            is usually a lot smaller than the PS code created by other PostScript
            engines.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="contra_xprint">
  <question>
    <para>
      Why do some people dislike Xprint ?
    </para>
  </question>
  <answer>
    <para>
      There are a few common misconceptions about Xprint.
      Let's take a look some of these "myths", some background - and the facts:
    </para>
    <blockquote>
    <!-- myth-fact list begin -->
      <qandaset id="myths_about_xprint">
        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint prints just a XWD dump of the Xserver bitmap
              </quote>
           </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
              Whoever says Xprint simply does an "xwd"-like dump is wrong.
            </para>

            <para>
              <!-- XXX: outdated information -->
              In short, Xprint <emphasis>currently</emphasis> (X11R6.5.1) supports *four* drivers:
              <orderedlist>
                <listitem>
                  <para>
                    X to native Postscript
                  </para>
                </listitem>
                <listitem>
                  <para>
                    X to native PCL5
                  </para>
                </listitem>
                <listitem>
                  <para>
                    X to native PCL3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    X to a raster which is then feed to something like xpr to
                    create PS or PCL5 wrapped rasters.
                  </para>
                </listitem>
              </orderedlist>
            </para>
            <para>
              In long, the original X Print Service ("XPS") was attempted
              during CDE 1.0, and they only got so far as the "raster" driver.
            </para>
            <para>
              As CDE 2.0 came around, Bob Schiefler and others at the X
              Consortium agreed that the X Consortium would work on a X to
              native PS Level 2 driver and HP would work on a X to native
              PCL5 driver.
            </para>
            <para>
              It was probably the CDE 1.0 effect that left many people with
              the impression that Xprint is all about xwd-like window dumps.
              NO! Xprint has native PostScript and PCL5 printing and more
              drivers (like PDF and SVGprint DDXs etc.) are in the development.
            </para>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint cannot handle non-'ISO Latin 1' chars
              </quote>
            </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
              Xprint can print any chars incl. those required for MathML,
              Hebrew, Arabic, Japanese etc. etc.
              For example - the Xprint module for Mozilla5 is the only print
              module which can proprtly print MathML.
            </para>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint uses a 1024x768 screen resolution to render the stuff on
                the paper - therefore it will never be able to do high-resolution
                stuff
              </quote>
            </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
               Xprt uses the screen resolution requested by the application or
               the printers default resolution.
               For example a 300 DPI printer which supports paper sizes up to
               DIN-A4 will get a screen with 3300x3300 pixels (screen width and
               height are usually equal to support per-page changes in the
               orientation (potrait/landscape etc.), the window size would be
               2400x3149 for "portrait" orientation) - and larger resolutions
               will result in larger screens.
            </para>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint prints only graphics(=bitmap/gfx) fonts
              </quote>
            </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
              In short, Xprt supports printer-builtin fonts and can
              download fonts to the printer if they do not exist on the printer.
            </para>
            <para>
              In long, this myth seems to have it's root in a <emphasis>feature</emphasis> of
              Xprt which can - if Xprt gets misconfigured - disable the use of
              printer-builtin fonts and the ability to download fonts.
            </para>
            <para>
              Xprt's PostScript and PCL DDX have the <emphasis>unique</emphasis> feature to create
              font glyphs from bitmap fonts if they are not available as
              printer-builtin fonts nor as outline fonts (OpenType, TrueType, PS Type1, etc.).
              However this is the fallback - the <emphasis>last</emphasis> option used by Xprt.
              Used if everything else fails.
              But when someone does not pass any outline fonts (such as OpenType,
              TrueType or PS Type1) fonts with the font
              path nor configures a printer model-config (which contains a
              description of the features&amp;fonts supported by the printer) Xprt
              will never have a chance to use them. And if everything else
              fails it has no other option than using what has been left - the
              bitmap fonts...
            </para>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint does not support pages sizes larger than DIN-A4
              </quote>
            </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
              There is no such limitation.
              The only limit is the 16bit coordinate system of the X11
              protocol - which is large enougth that Xprint can support paper
              sizes <emphasis>larger</emphasis> than DIN-A0 oversize papers. There is no problem
              with creating your own monster-size DIN-A0 posters using
              Xprint-based applications.
            </para>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                Xprint does not support rotated text
              </quote>
            </para>
          </question>
          <answer>
            <label>Fact:</label>
            <para>
              Xprint and all it's drivers support the X11 matrix XLFD
              enhancement introduced in X11R6 (and future versions of Xprint will
              support the <ulink url="http://stsf.sourceforge.net/">STSF</ulink> font API which supports
              matrix transformations as well).
              Fonts can be rotated at any angle. Take a look at the
              <link linkend="faq_development">SOFTWARE DEVELOPMENT</link> section in
              this FAQ for examples...
            </para>
          </answer>
        </qandaentry>

        <!-- myth: Xprint rendering model is not good for printers -->
        <qandaentry id="myth_rendering_model_not_good">
          <question>
            <label>Myth:</label>
            <para>
              <quote>
                The X11 rendering model is not good enougth for printers
              </quote>
            </para>
          </question>
          <answer>
            <label>Facts:</label>
            <para>
              <itemizedlist>
                <listitem>
                  <para>
                    The default Xprint rendering model uses the X11 rendering model - which
                    is "limited"... but only when compared with PostScript.
                    But the attempt to compare Xprint with PostScript is like comparing apples
                    and eggs - they have been designed with different goals in mind - PostScript
                    as plain rendering language for printers and Xprint as integrated all-in-one
                    solution to allow applications to print without having special knowledge
                    about the OS, spooler, <link linkend="what_does_pdl_mean">PDL</link> or
                    printer.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Around 95% of the applications which have print support do not use any of the
                    special features provided by rendering models like PostScript.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Xprint does not require that an application uses the X11 rendering model -
                    they are <emphasis>free</emphasis> to generate their own PostScript code or PostScript
                    fragments and pass it to the printer via the Xprint API or use the OpenGL rendering
                    model via the GLX extension available in newer versions of the Xprint server.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Printing from Mozilla, Motif or the Qt toolkit using Xprint results in
                    a <emphasis>much better</emphasis> quality than using the "native" PostScript
                    generation code in those applications.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Xprint supports more <link linkend="what_does_pdl_mean">PDLs</link> than
                    PostScript - having a PostScript-specific rendering model would be
                    limiting, and make it difficult to support other
                    <link linkend="what_does_pdl_mean">PDLs</link>.
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </answer>
        </qandaentry>

      </qandaset>
      <!-- myth-fact list end -->


    </blockquote>
  </answer>
</qandaentry>

<qandaentry id="does_xprint_support_anti_aliased_fonts">
  <question>
    <para>
      Does Xprint support anti-aliased fonts ?
    </para>
  </question>
  <answer>
    <para>
      Question back: When do we need anti-aliased fonts ?
      Anti-aliasing is a "hack" to work around the limitations caused by the
      low resolution of monitors - they usually operate between 72 DPI and
      150 DPI.
    </para>
    <para>
      But Xprint operates on printers where the usual <emphasis>minimum</emphasis> resolution is
      300 DPI (today's normal office printers support resolutions ranging from
      300 DPI up to 2400 DPI depending on the model; most common is 600 DPI).
      Anti-aliasing at those resolutions is not required anymore.
      Additionally many printers support their own font anti-aliasing at lower
      resolutions which is far better and faster than it could be "done" on the
      client side.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I check if Xprint is working and should be used ?
    </para>
  </question>
  <answer>
    <para>
      Check whether the <envar>${XPSERVERLIST}</envar> env var is set or not.
      If <envar>${XPSERVERLIST}</envar> is set then Xprint is available and should be used.
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_can_i_view_postscript_files">
  <question>
    <para>
      How can I view PS(=PostScript) files ?
    </para>
  </question>
  <answer>
    <para>
      <itemizedlist>
        <listitem>
          <para>
            On Unix/Linux (general):
            <itemizedlist>
              <listitem>
                <para>
                  GhostScript ("gs") and GhostView ("gv" and it's KDE- and Gnome-specific versions "kghostview" and "ggv")
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </itemizedlist>
      <itemizedlist>
        <listitem>
          <para>
            Solaris:
            <itemizedlist>
              <listitem>
                <para>
                  <filename>/usr/dt/bin/sdtimage</filename> (DPS-based image viewer for CDE)
                </para>
              </listitem>
              <listitem>
                <para>
                  <filename>/usr/openwin/bin/pageview</filename> (DPS-based image viewer for OpenWindows)
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_can_i_view_pcl_files">
  <question>
    <para>
      How can I view PCL files ?
    </para>
  </question>
  <answer>
    <para>
      XXX - <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=2261">xprint.mozdev.org bug 2261</ulink>
      has been filed for that issue.
    </para>
  </answer>
</qandaentry>


<qandaentry>
  <question>
    <para>
      How does Xprt find fonts ?
    </para>
  </question>
  <answer>
    <para>
      <!-- Uhm... this is actually how *Mozilla* does the job... not Xprt... ;-/ (FIXME!) -->
      Lookup-rule for Xprt's PostScript DDX to find fonts:
      <orderedlist>
        <listitem>
          <para>
            Printer-builtin fonts (defined by the fonts/-dir in the model-config)
          </para>
        </listitem>
        <listitem>
          <para>
            PostScript fonts (will be downloaded via generated print job)
          </para>
        </listitem>
        <listitem>
          <para>
            GFX-fonts build from X11 scaleable fonts
          </para>
        </listitem>
        <listitem>
          <para>
            GFX-fonts build from X11 bitmap fonts
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I print TrueType fonts with Xprint ?
    </para>
  </question>
  <answer>
    <para>
      <orderedlist>
        <listitem>
          <para>
            Linux Xprt build from <ulink url="http://xprint.mozdev.org">http://xprint.mozdev.org/</ulink>'s source supports
            TrueType fonts out-of-the-box (starting with the 008 development tree;
            xprint.mozdev.org's releases &lt;= 007 do not support TrueType fonts) and
            and does not require any special actions.
          </para>
        </listitem>
        <listitem>
          <para>
            Sun's Xprt on Solaris (<filename>/usr/openwin/bin/Xprt</filename>) has TrueType font
            support out-of-the-box and does not require any special actions.
          </para>
        </listitem>
        <listitem>
          <para>
            You can setup a TTF-aware X font server ("xfs", see
            <citerefentry><refentrytitle>xfs</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>)
            with the matching TrueType fonts and add the font server location to Xprt's font path.
          </para>
        </listitem>
        <listitem>
          <para>
            Sourceforge has a TrueType to PostScript Type 1 converter project,
            see <ulink url="http://ttf2pt1.sourceforge.net/download.html">http://ttf2pt1.sourceforge.net/download.html</ulink>.
            You may convert the TTF files into PT1 files that Xprt can download them
            to the printer on demand...
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="what_does_ddx_mean">
  <question>
     <para>
       What does "DDX" mean ?
    </para>
  </question>
  <answer>
    <para>
      "DDX" is a short term for "Device Dependent X" - the device-specific layer
      of a Xserver (<link linkend="what_does_dix_mean">"DIX"</link>(="Device Independent X") is the counterpart).
    </para>
  </answer>
</qandaentry>

<qandaentry id="what_does_dix_mean">
  <question>
    <para>
      What does "DIX" mean ?
    </para>
  </question>
  <answer>
    <para>
      "DIX" is a short term for "Device Independent X" - the non-device specific
      code of a Xserver (<link linkend="what_does_ddx_mean">"DDX"</link>(="Device Dependent X") is the counterpart).
    </para>
  </answer>
</qandaentry>

<qandaentry id="what_does_pdl_mean">
  <question>
    <para>
      What does "PDL" mean ?
    </para>
  </question>
  <answer>
    <para>
      "PDL" is a short term for "Page Description Language". Examples for PDLs are
      PostScript, PCL, PDF and SVGprint.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      I have twenty printers installed on my system - but Xprt only shows two
      screens. Where are all the other printers ?
    </para>
  </question>
  <answer>
    <para>
      A Xprt screen does not represent a single printer. A Xprt screen
      represents a single DDX (currently supported are PostScript, PCL3/5 color,
      PCL mono and "raster" output(=1bit deep bitmap).
    </para>
  </answer>
</qandaentry>

<qandaentry id="platforms_supported_by_xprint">
  <question>
    <para>
      Which platforms support Xprint ?
    </para>
  </question>
  <answer>
    <para>
      All platforms which support X11 &gt;= R6.4 can use Xprint. The client side
      (<filename>libXp.so</filename>) is available on Linux/FreeBSD(=Xfree86), Solaris, HP-UX and AIX
      and the Xprt server side is available by default on Solaris and HP-UX
      (Xfree86 shipps with a Xprt binary - but that is broken and unuseable).
      The client-side extension library (<filename>libXp.so</filename>) can be compiled on any
      platform, the Xprt server needs minor adjustments for the specific
      platforms...
      If your platform does not have Xprint (client-side and/or server-side)
      you can get the sources from <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      I have the broken Xfree86 Xprt binary on my system. Do I need a new
      version of <filename>libXp.so</filename> (the client side X11 extension library for Xprint),
      too ?
    </para>
  </question>
  <answer>
    <para>
      No, the <filename>libXp.so</filename> shared library shipped with Xfree86 or build from
      Xfree86 sources is not broken, only the server side ("Xprt") is buggy.
      There is no need to replace the library.
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_do_i_spell_xprint">
  <question>
    <para>
      Which spelling is correct - "Xprint", "XPrint", "Xprinter" or Xprt" ?
    </para>
  </question>
  <answer>
    <para>
      "Xprint" is the correct one - "XPrint" is just a typo, "Xprinter" is a
      complety different product not related to X11/Xprint and "Xprt" is only
      the "X11 print server"(=the server side of Xprint).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Which applications support Xprint ?
    </para>
  </question>
  <answer>
    <para>
      There are various applications which support Xprint:
      <itemizedlist>
        <listitem>
          <para>
            Motif/LessTif toolkits (full framework incl. special widgets like <function>XmPrintShell</function>)
          </para>
        </listitem>
        <listitem>
          <para>
            Athena toolkit (full framework incl. special widgets like <function>XawPrintShell</function>, starting with X.org release 6.8.0)
          </para>
        </listitem>
        <listitem>
          <para>
            Xedit, Xman, Xmore, etc. (starting with X.org release 6.8.0)
          </para>
        </listitem>
        <listitem>
          <para>
            <ulink url="http://www.opengroup.org/cde/">Common Desktop Environment (CDE) 2.x</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            <ulink url="http://www.mozilla.org/projects/xprint/">Mozilla, FireFox, ThunderBird, etc.</ulink>
          </para>
        </listitem>
        <listitem>
          <para>
            Eclipse
          </para>
        </listitem>
        <listitem>
          <para>
            KDE/Qt support is planned for Q1/2005
          </para>
        </listitem>
        <listitem>
          <para>
            StarOffice 5.x
          </para>
        </listitem>
        <listitem>
          <para>
            etc.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="is_xprint_only_for_mozilla">
  <question>
    <para>
      Is "Xprint" "mozilla"-only (I saw that it's hosted by mozdev.org) ?
    </para>
  </question>
  <answer>
    <para>
      No, Xprint is a general-purpose print API based on X11 used by
      many applications - <ulink url="http://www.mozdev.org/">mozdev.org</ulink> is just
      one of the hosting places (others are
      <ulink url="http://xprint.freedesktop.org/">http://xprint.freedesktop.org/</ulink> (bugzilla, CVS)
      and <ulink url="http://www.sourceforge.net/projects/xprint/">http://www.sourceforge.net/projects/xprint/</ulink> (download area))
      hosting the development area, <ulink url="http://xprint.mozdev.org/docs/">documentation</ulink> and
      <ulink url="http://xprint.mozdev.org/list.html">mailinglist</ulink>.
      <literal>:)</literal>.
    </para>
  </answer>
</qandaentry>

<qandaentry id="xprint_license">
  <question>
    <para>
      Under which license is the source code from xprint.mozdev.org distributed under ?
    </para>
  </question>
  <answer>
    <para>
      That's the plain "MIT" license, the same as used by Xfree86.org &lt; V4.4.0 and X.org:
<programlisting>
Copyright (c) &lt;year&gt; &lt;copyright holders&gt;

Permission is hereby granted, free of charge, to any person obtaining a copy of this software
and associated documentation files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
</programlisting>
      </para>
    </answer>
  </qandaentry>

<qandaentry id="why_does_xprint_not_use_ppds">
  <question>
    <para>
      Why does Xprint not use PPDs for configuration ?
    </para>
  </question>
  <answer>
    <para>
      Xprint supports multiple "page description languages (<link linkend="what_does_pdl_mean">PDL</link>)"
      including PostScript, PDF, PCL, etc. Therefore Xprint uses a different
      configuration file format which works with all these PDLs and not only
      PostScript (PPD files are PostScript-specific and cannot be used for
      other PDLs).
    </para>
    <para>
      There is currently a converter in development to convert a Adobe PPD file
      into Xprint's model-config format.
      See <ulink url="http://xprint.freedesktop.org/bugzilla/show_bug.cgi?id=636">xprint.freedesktop.org bug 636
      ("RFE: Add an Adobe PPD to model-config converter / xpppdtomodelconfig")</ulink> for further information.
    </para>
  </answer>
</qandaentry>

</qandadiv>

      <qandadiv id="faq_usage">
<title>Usage</title>

<qandaentry id="how_to_configure_xprint_clients">
  <question>
    <para>
      How do I configure Xprint on the client side ?
    </para>
  </question>
  <answer>
    <para>
      There are two env vars which control Xprint on the client side:
      <orderedlist>
        <listitem>
          <para>
            The env variable <envar>${XPSERVERLIST}</envar> contains a list of display identifiers
            (seperated by whitespace) to tell the application where it can find
            the Xprt servers.
            Usually <envar>${XPSERVERLIST}</envar> is set by the profile startup scripts (e.g.
            <filename>/etc/profile</filename> or <filename>/etc/profile.d/xprint.sh</filename>) using the output of
            "/etc/init.d/xprint get_xpserverlist".
            Example:
<screen>
  % <userinput>export XPSERVERLIST="`/etc/init.d/xprint get_xpserverlist`"</userinput>
</screen>
            Alternativly <envar>${XPSERVERLIST}</envar> can be set manually:
          </para>
          <para>
            Example:
<screen>
  % <userinput>export XPSERVERLIST="littlecat:80 bitdog:72"</userinput>
</screen>
            instructs an application to look at the displays 80 on the machine
            "littlecat" and display 72 on the machine bigdog to look for Xprt
            servers.
          </para>
        </listitem>
        <listitem>
          <para>
            The env variable <envar>${XPRINTER}</envar> defines the default printer used by print
            applications.
            The details can be found in the FAQ item
            <link linkend="configure_default_printer">How do I change the default printer used by Xprint applications ?</link> ...
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_do_i_start_xprt">
  <question>
    <para>
      How do I start Xprt ?
    </para>
  </question>
  <answer>
    <para>
      <orderedlist>
        <listitem id="starting_xprt_on_linux_rpm">
          <para>
            Linux RPM installations on Mandrake/RedHat/SuSE Linux:
            Binary RPM packages provided by xprint.mozdev.org (or based on the same
            source :) will install <filename>/etc/init.d/xprint</filename> and related glue
            (see <link linkend="starting_xprt_general">[4]</link>)
            automatically; after a reboot a Xprt instance will be started at system
            startup and <envar>${XPSERVERLIST}</envar> should be populated for all users.
            Note that you can start/stop per-user instances using <filename>/etc/init.d/xprint</filename>
            (see <link linkend="starting_xprt_general">[4]</link>), too...
          </para>
        </listitem>
        <listitem id="starting_xprt_on_debian_linux">
          <para>
            Debian Linux:
            Same as <link linkend="starting_xprt_on_linux_rpm">[1]</link>, however Debian does not support
            <filename>/etc/profile.d/</filename> - you have to add the following line to <filename>/etc/profile</filename>
            (for sh/ksh/bash) to populate <envar>${XPSERVERLIST}</envar>:
<screen>
  <userinput>export XPSERVERLIST="`/bin/sh /etc/init.d/xprint get_xpserverlist`"</userinput>
</screen>
            See <ulink url="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=171174">bugs.debian.org bug 171174</ulink>
            ('"xprint-xprintorg" should automatically populate <envar>$XPSERVERLIST</envar>') for
            further details on this issue...
          </para>
        </listitem>
        <listitem id="starting_xprt_on_solaris">
          <orderedlist>
            <listitem id="starting_xprt_on_solaris_using_giswxprintglue">
              <para>
                Solaris using the "GISWxprintglue" package:
                <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>
                provides a Solaris package called "GISWxprintglue"
                which contains all the neccesary configuration files and startup scripts
                to use Xprint; after a reboot a Xprt instance will be started at system
                startup and <envar>${XPSERVERLIST}</envar> should be populated for all users.
                Note that you can start/stop per-user instances using <filename>/etc/init.d/xprint</filename>
                (see <link linkend="starting_xprt_general">[4]</link>), too...
              </para>
            </listitem>
            <listitem id="starting_xprt_on_solaris_using_giswxprint">
              <para>
                Solaris using the "GISWxprint" package:
                <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink>
                provides a Solaris package called "GISWxprint"
                which is technically identical to the "GISWxprintglue"
                (see <link linkend="starting_xprt_on_solaris_using_giswxprintglue">[3a]</link>) but
                provides a Xprt binary build from the xprint.mozdve.org sources
                ("GISWxprintglue" uses the <filename>/usr/openwin/bin/Xprt</filename> binary provided by Solaris).
              </para>
            </listitem>
          </orderedlist>
        </listitem>
        <listitem id="starting_xprt_general">
          <para>
            General: Using <filename>/etc/init.d/xprint</filename> and related glue:
            There are startup/shutdown scripts in <filename>xc/programs/Xserver/Xprint/etc/</filename>
            to start/stop/restart Xprt per-machine and/or per-user and to populate the
            <envar>${XPSERVERLIST}</envar> env var:
            <itemizedlist>
              <listitem>
                <para>
                   "<filename>xc/programs/Xserver/Xprint/etc/init.d/xprint</filename>" is a script for SystemV
                   and Linux to start/stop/restart Xprt. The script includes installation
                   and usage details and can be used by both "root" (to start Xprt for all
                   users) or by a single (non-priviledged, plain) user (to start Xprt
                   instances only for his/her own use)
                </para>
              </listitem>
              <listitem>
                <para>
                   "<filename>xc/programs/Xserver/Xprint/etc/profile.d/xprint.csh</filename>" and
                   "<filename>xc/programs/Xserver/Xprint/etc/profile.d/xprint.sh</filename>" are scripts for
                   Linux (which support <filename>/etc/profile.d/</filename> ; note that this does not include
                   Debian) to populate the <envar>${XPSERVERLIST}</envar> env var for each user.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem id="starting_xprt_manually">
          <para>
            Starting Xprt "manually" (without using <filename>/etc/init.d/xprint</filename>):
            Set the <envar>${XPCONFIGDIR}</envar> env variable to the directory where Xprt can find
            it's configuration data.
            <warning>
              <title>WARNING</title>
              <para>
                If Xprt cannot find it's configuration data it will not be
                able to use printer-builtin fonts (which are defined by the
                model-config in the configuration dir). Without printer-builtin fonts
                Xprt <emphasis>may</emphasis> fall back to generate font glyphs from bitmap fonts (this
                resulted in the MYTH that "Xprt can only print gfx fonts". This is not
                <emphasis>TRUE</emphasis> - this only happens if Xprt is either misconfigured or no
                matching builtin or PS Type1 font is available).
              </para>
              <para>
                You may want to make a copy of the default configuration directory and
                modify it to match your needs.
              </para>
            </warning>
          </para>
        </listitem>
        <listitem>
          <para>
            Starting Xprt is just as easy as starting any other Xserver:
<screen>
  % <userinput>Xprt :12</userinput>
</screen>
            will start Xprt on display 12 (e.g. set <envar>${XPSERVERLIST}</envar> to ":12" or
            "myhostname:12".
          </para>
          <para>
            You may want to copy your framebuffer Xserver's font path to be able to
            print all fonts which can be displayed on that Xserver.
<screen>
  % <userinput>Xprt -fp $(xset q | awk "/Font Path:/ { i=1 ; next } i==1 { print \$0 ; i=0 }") :12</userinput>
</screen>
          </para>
        </listitem>
      </orderedlist>
      <note>
        <title>Notes:</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The <filename>/etc/init.d/xprint</filename> has a more advanched filtering scheme based on
                regex patters to "accept" and/or "reject" font paths
              </para>
            </listitem>
            <listitem>
              <para>
                'xset q | awk "/Font Path:/ { i=1 ; next } i==1 { print \$0 ; i=0 }"'
                may be too simple-minded if your Xserver does not support TrueType
                fonts. The following statemement is better in this case since it
                filters the font path and removes all path elements which have TrueType
                fonts (*.ttf, *.TTF) or TrueType font collections (*.ttc, *.TTC) in
                <filename>fonts.dir</filename>:
<screen>
  % <userinput>xset q | awk "/Font Path:/ { i=1 ; next } i==1 { print \$0 ; i=0 }" |
   tr "," "\n" | while read i ; do \
  if [ "$(cat ${i}/fonts.dir | egrep -i "ttf|ttc" 2>/dev/null)" == "" ] \
  ; then echo $i ; fi ; done | (fontpath="" ; fpdelim=""; while read i ; \
  do fontpath=${fontpath}${fpdelim}${i} ; fpdelim="," ; done ; echo \
  $fontpath)</userinput>
</screen>
              </para>
            </listitem>
            <listitem>
              <para>
                It may be easier to just feed all available font paths to Xprt
                (BTW: mozilla 1.0 had a bug in that case which resulted in the problem
                that it used many many bitmap fonts in that case - this has been fixed
                for 1.0.1 and Netscape 7 (that's the reason why the quickguides for
                hebrew/cyrillic use the "Xp_dummyfonts" fonts instead of
                <filename class="directory">/usr/openwin/lib/X11/fonts/misc/</filename> - to avoid that Mozilla finds bitmap
                fonts for the same locale).
                The following "small" one-liner finds all fonts (except printer builtin
                fonts):
<screen>
  % <userinput>find /usr/openwin -name fonts.dir | while read i ; do echo
  ${i%/fonts.dir} ; done | fgrep -v "models/"</userinput>
</screen>
                Plug it into the filter above to remove the Truetype fonts and you are
                "done"... :)
              </para>
            </listitem>
          </itemizedlist>
          See <link linkend="faq_troubleshooting">TROUBLESHOOTING</link> if you run into problems...
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I get a list of printers managed by Xprint ?
    </para>
  </question>
  <answer>
    <para>
      The tool "xplsprinters" is designed for that purpose. It can deliver both
      list of printers and attributes supported for a specific list of printers.
      Use % xplsprinters -h # to obtain usage information.
      Example:
      <itemizedlist>
        <listitem>
          <para>
            Get list of available printers:
<screen>
% <userinput>xplsprinters</userinput>
<computeroutput>printer: hplaserjet001@castor:19
printer: hpcolor001@castor:19
printer: laser1@jason:5
printer: david_dj01@jason:5</computeroutput>
</screen>
            </para>
        </listitem>
        <listitem>
          <para>
          Get information about the supported attrbites of printer "ps002":
<screen>
% <userinput>xplsprinters -printer ps002 -l</userinput>
<computeroutput>printer: ps002@castor:18
        description=
        model-identifier=HPDJ1600C
        default-medium=iso-a4
        default-input-tray=
        medium-source-sizes-supported=iso-a4 false 6.35 203.65 6.35 290.65
        medium-source-sizes-supported=na-letter false 6.35 209.55 6.35 273.05
        default-printer-resolution=300
        resolution=300
        default_orientation=
        orientation=portrait
        orientation=landscape
        default_plex=
        plex=simplex</computeroutput>
</screen>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I start Xprt at boot time ?
    </para>
  </question>
  <answer>
    <para>
      "<filename>xc/programs/Xserver/Xprint/etc/init.d/xprint</filename>" is a script for SystemV
      and Linux to start/stop/restart Xprt at system startup (e.g. per-machine)
      or for a single user (e.g. per-user).
      The script includes installation and usage details.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I start Xprt per-user ?
    </para>
  </question>
  <answer>
    <para>
      "<filename>xc/programs/Xserver/Xprint/etc/init.d/xprint</filename>" is a script for SystemV
      and Linux to start/stop/restart Xprt at system startup (e.g. per-machine)
      or for a single user (e.g. per-user).
      The script includes installation and usage details.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I start Xprt only for one application ?
    </para>
  </question>
  <answer>
    <para>
      Create your own version/copy of <filename>/etc/init.d/xprint</filename> and modify it to fit
      your requirements and then make sure that you issue a
      "my_xprint_startscript start" before starting the application and a
      "my_xprint_startscript stop" after leaving the application.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I filter the font path which should be passed to Xprt for
      certain fonts ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I manage access control to the Xprt server ?
    </para>
  </question>
  <answer>
    <para>
      Access control to Xprt is not differently as to any other Xserver and
      can be handled in various ways - like per-cookie
      (using MIT-MAGIC-COOKIE-1 authentification),
      per-user (using SUN-DES-1 or MIT-KERBEROS-5 auth., see
      (see <citerefentry><refentrytitle>xhost</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>))
      and/or per-machine (using "xhost" (see <citerefentry><refentrytitle>xhost</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>) and/or
      <filename>/etc/X&lt;dpy&gt;.hosts</filename> (&lt;dpy&gt; ==  display number,
      e.g. <filename>/etc/X0.hosts</filename> for display 0) (see <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>))
      Consult manual pages
      <citerefentry><refentrytitle>Xsecurity</refentrytitle><manvolnum>__miscmansuffix__</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>xhost</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>
      etc. for further details.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I log access to the Xprt server ?
    </para>
  </question>
  <answer>
    <para>
      Logging access to Xprt can be done using the standard Xserver auditing,
      see the <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>
      manual page, option "-audit"
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Does it require "root" permissions to use Xprt/Xprint ?
    </para>
  </question>
  <answer>
    <para>
      No, both Xprint clients and Xprint server(s) do not require root rights
      to work.
    </para>
    <para>
      Xprint clients are handled like any other X11 application and the Xprt
      servers can run without any special requirements.
      Solaris is an exception here since it requires to start any Xserver
      (incl. Xprt) setgid "root" (set-group-id "root", this is <emphasis>not</emphasis>
      set-user-id "root") since the sockets/pipe files in /tmp/.X11-pipe/ and
      /tmp/.X11-unix/ are only accessible for the group "root".
      The workaround is to start Xprt with the option "-pn"; therefore even
      Xprt server binaries which are not setgid "root" can run without
      problems).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I see the attributes of a printer managed by Xprint ?
    </para>
  </question>
  <answer>
    <para>
      "xplsprinters -printer myprinter004 -l" will do the job for printer
      "myprinter004".
    </para>
    <para>
      See
      <citerefentry><refentrytitle>xplsprinters</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>
      for futher usage and a description of the output.
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_can_i_list_the_font_path_used_by_xprint">
  <question>
    <para>
      How can I list the font path used by a Xprt server ?
    </para>
  </question>
  <answer>
    <para>
      Figure out the display id of the server which should be queried (we are
      using "foobar:98" in this example) and then try this:
<screen>
% <userinput>(DISPLAY=foobar:98 xset q | \
awk "/Font Path:/ { i=1 ; next } i==1 { print \$0 ; i=0 }" | \
tr "," "[\n]")</userinput>
# Output may look like:
<computeroutput>PRINTER:/usr/openwin/server/etc/XpConfig/C/print/models/HPDJ1600C/fonts/
PRINTER:/usr/openwin/server/etc/XpConfig/C/print/models/SPSPARC2/fonts/
PRINTER:/usr/openwin/server/etc/XpConfig/C/print/models/HPLJ3Si-PS/fonts/
/usr/openwin/lib/X11/fonts/F3/
/usr/openwin/lib/X11/fonts/F3bitmaps/
/usr/openwin/lib/X11/fonts/Type1/
/usr/openwin/lib/X11/fonts/Speedo/
/usr/openwin/lib/X11/fonts/misc/
/usr/openwin/lib/X11/fonts/75dpi/
/usr/openwin/lib/X11/fonts/100dpi/</computeroutput>
</screen>
      <note>
        <title>Note:</title>
        <para>
          Note that the font path items which start with "PRINTER:" are <emphasis>only</emphasis> be
          sourced <emphasis>after</emphasis> the matching printer has been selected and configured
          (for developers: After <function>XpSetContext</function> has been called).
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      "xset q" lists all model-specific font dirs (like
      PRINTER:/myxpcfg/C/print/models/SPSPARC2/fonts/") - is that a bug ?
    </para>
  </question>
  <answer>
    <para>
      No, this is normal. Xprt will add all fonts of all printer models to the
      font path - but font path items starting with "PRINTER:" are <emphasis>only</emphasis>
      available for an application <emphasis>after</emphasis> the matching printer has been
      selected and configured (for developers: After <function>XpSetContext</function> has been
      called), <emphasis>before</emphasis> that point fonts in these dirs are not available for
      an application.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      My application lists a printer called "xp_ps_spooldir_tmp_Xprintjobs" /
      "xp_pdf_spooldir_tmp_Xprintjobs" / "spooldir_tmp_Xprintjobs" /  in the
      print dialog but I do not have such a print queue installed anywhere.
      What is that for a thing ?!
    </para>
  </question>
  <answer>
    <para>
      "xp_ps_spooldir_tmp_Xprintjobs" and "xp_pdf_spooldir_tmp_Xprintjobs"
      ("spooldir_tmp_Xprintjobs" was the old, pre-009 name for "xp_ps_spooldir_tmp_Xprintjobs")
      are special Xprint printer targets which uses the "PSspooldir" / "PS2PDFspooldir-GS"
      printer models. These model config sends PostScript or PDF jobs
      to the <filename>/tmp/Xprintjobs/</filename> directory instead to a physical printer
      (quite usefull for people who want to get the PostScript or PDF files as output instead
      of printed pages).
    </para>
    <formalpara>
      <title>References:</title>
      <para>
        <itemizedlist>
          <listitem><para><ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=5092">xprint.mozdev.org bug 5092 ("[PS2PDFspooldir-GS] RFE: Add printer model which sends PDF jobs to /tmp/Xprintjobs/")</ulink></para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
  </answer>
</qandaentry>

<qandaentry id="manual_xprint_forwarding_via_ssh">
  <question>
    <para>
      How can I forward Xprint services when logging-in via ssh to another machine ?
    </para>
  </question>
  <answer>
    <para>
      You have to forward the X11 connection for the Xprint server(s) to the remote system
      and set the <envar>XPSERVERLIST</envar> variable to direct the Xprint clients to the forwarded ports.

      <example role="example">
        <title>Login to a remote host using slogin (assuming there is only one
        Xprint server listed in <envar>XPSERVERLIST</envar>)</title>

        <para><screen>% <userinput>echo $XPSERVERLIST</userinput></screen></para>
        <screen><computeroutput>west:33</computeroutput></screen>
        <para>Add 6000 to the display number ("33" in this example) to get the port number
        (X11 port numbers start at port 6000. 6000 is display number "0", 6001 is display number 6001 and so on)
        and then ask slogin to forward the port:
        </para>
        <para><screen>% <userinput>slogin -R6033:west:6033 -l nrubsig puzzle</userinput></screen>
        <screen><computeroutput>nrubsig's password: 
Last login: Fri Jan 23 04:05:06 2004 from west.informatik.med.uni-giessen.de
Have a lot of fun...
</computeroutput></screen>
        </para>
        <para>
          Then set the <envar>XPSERVERLIST</envar> env var on the remote host to the forwarded
          ports and you are done:
        </para>
        <para><screen>% <userinput>export XPSERVERLIST="localhost:33 ${XPSERVERLIST}"</userinput></screen></para>
      </example>

      <example role="example">
        <title>Login to a remote host using slogin (assuming there are multiple
        Xprint servers listed in <envar>XPSERVERLIST</envar>)</title>
        <para>
          The following small shell script will process the <envar>XPSERVERLIST</envar> env var and output the
          parameters for calling slogin/ssh with all Xprint server ports forwarded:
<programlisting>
#!/bin/ksh
# xp_print_slogin_args.ksh
# Small example which parses $XPSERVERLIST and prints out how slogin/ssh
# should be used to forward all local Xprint servers

PORTARGS=""
REMOTE_XPSERVERLIST=""
spacer="" # seperator
remoteport=6100
remotedisplaynum=100

echo "${XPSERVERLIST}" | tr " " "\n" | 
    while read i ; do 
        [ "$i" = "" ] &amp;&amp; continue
        displaynum="${i##*:}"
        port="$(( ${displaynum} + 6000 ))"
        hostname="${i%:*}"
        PORTARGS="${PORTARGS}${spacer}-R${remoteport}:${hostname}:${port}"
        REMOTE_XPSERVERLIST="${REMOTE_XPSERVERLIST}${spacer}localhost:${remotedisplaynum}"

        spacer=" "
        remoteport=$((${remoteport} + 1))
        remotedisplaynum=$((${remotedisplaynum} + 1))
    done
echo "Log in with: % slogin ${PORTARGS} -l myloginname myremotehost"
echo "Set remote XPSERVERLIST with % export XPSERVERLIST=\"${REMOTE_XPSERVERLIST} \${XPSERVERLIST}\""
# EOF.
</programlisting>
        </para>
        <para>Example usage:
          <screen>% <userinput>xp_print_slogin_args.ksh</userinput></screen>
          will print
          <screen><computeroutput>Log in with: % slogin -R6100:west:6033 -R6101:north:6033 -l myloginname myremotehost
Set remote XPSERVERLIST with % export XPSERVERLIST="localhost:100 localhost:101 ${XPSERVERLIST}"</computeroutput></screen>
        </para>
      </example>
    </para>
  </answer>
</qandaentry>


</qandadiv>

<qandadiv id="faq_configuration">
<title>Configuration</title>

<qandaentry id="configure_default_printer">
  <question>
    <para>
      How do I change the default printer used by Xprint applications ?
    </para>
  </question>
  <answer>
    <para>
      The env variable <envar>${XPRINTER}</envar> defines the default printer used by print
      applications. The syntax is either &lt;printername&gt; or
      &lt;printername&gt;@&lt;display&gt;

      <orderedlist>
        <title>Examples:</title>
        <listitem>
          <para>
<screen>
  % <userinput>export XPRINTER=ps003</userinput>
</screen>
          tells an application to look for the first printer named "ps003" on
          all Xprt servers.
          </para>
        </listitem>
        <listitem>
          <para>
<screen>
  % <userinput>export XPRINTER="hplaser19@littlecat:80"</userinput>
</screen>
            tells an application to look for the printer "hplaser19" on the Xprt
            display "littlecat:80".
          </para>
        </listitem>
      </orderedlist>
      <note>
        <title>Note:</title>
        <para>
          If <envar>${XPRINTER}</envar> is not set the applications will examine the values of
          the <envar>${PDPRINTER}</envar>, <envar>${LPDEST}</envar>, and
          <envar>${PRINTER}</envar> env vars (in that order).
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_default_plex">
  <question>
    <para>
      How do I change the defaults for double-sided/single-sided/etc.
      printing ?
    </para>
  </question>
  <answer>
    <para>
      This is controlled via the "plex" attribute in the document attribute
      pool <filename>(<envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/document</filename> and/or
      <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename>).
      Examples:
      <orderedlist>
        <listitem>
          <para>
            Adding/modifying the following line to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default plex for
            all printers to "duplex":
<screen>
  *plex: duplex
</screen>
          </para>
        </listitem>
        <listitem>
          <para>
            Adding/modifying the following two lines to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default plex for
            all printers to "duplex" except for printer "ps003" which should
            default to "simplex":
<screen>
  *plex: duplex
  ps003.plex: simplex
</screen>
          </para>
        </listitem>
      </orderedlist>

      <note>
        <title>Notes:</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Not all printers support all plex modes. The model-config may restrict
                the available plex modes.
              </para>
            </listitem>
            <listitem>
              <para>
                Setting a plex mode which is not supported by either the DDX(=driver)
                or not specified in the model-config will cause Xprt to not set a
                default plex.
              </para>
            </listitem>
            <listitem>
              <para>
                The PostScript DDX supports plex modes "simplex", "duplex" and "tumble".
              </para>
            </listitem>
            <listitem>
              <para>
                Verification:
                Use
<programlisting>
  xplsprinters -l | egrep "^printer:|default_plex=|plex="
</programlisting>
                to view the plex settings for all printers.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_default_papersize">
  <question>
    <para>
      I am in America and I don't have any ISO A4 paper. How do I change the
      default paper size to 8.5 inch x 11 inch (US-Letter) ?
    </para>
  </question>
  <answer>
    <para>
      This is controlled via the "default-medium" attribute in the document
      attribute pool (<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/document</filename> and/or
      <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename>).
      Examples:
      <orderedlist>
        <listitem>
          <para>
            Adding/modifying the following line to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default paper size
            for all printers to "na-letter":
<screen>
  *default-medium: na-letter
</screen>
          </para>
        </listitem>
        <listitem>
          <para>
            Adding/modifying the following two lines to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default paper size
            for all printers to "na-letter" except for printer "ps003" which should
            default to "iso-a4":
<screen>
  *default-medium: na-letter
  ps003.default-medium: iso-a4
</screen>
          </para>
        </listitem>
      </orderedlist>

     <note>
       <title>Notes:</title>
       <para>
         <itemizedlist>
           <listitem>
             <para>
               xprint.mozdev.org releases &gt;= 007 provides a seperate "document"
               attribute pool for en_US(-like) locales (see
               <filename><envar>${XPCONFIGDIR}</envar>/en_US/print/attributes/document</filename>) which will override the
               default ISO-A4 with US-Letter (this feature assumes that <envar>${LANG}</envar> is set
               to "en_US" (or a locale which has similar defaults as "en_US", those
               are currently linked to "en_US" in <filename><envar>${XPCONFIGDIR}</envar>/</filename>))
             </para>
           </listitem>
           <listitem>
             <para>
               Not all printers support all paper sizes. The model-config may restrict
               the available paper sizes.
             </para>
           </listitem>
           <listitem>
             <para>
               Setting a paper size which is not supported by either the DDX(=driver)
               or not specified in the model-config will cause Xprt to not set a
               default paper size.
             </para>
           </listitem>
           <listitem>
             <para>
               The PostScript DDX supports the following paper sizes:
               <itemizedlist>
                <listitem>
                  <para>
                    X.org release 6.6 (X116.6):
                    <simplelist type="inline">
                      <member>"iso-a4"</member>
                      <member>"na-letter"</member>
                      <member>"na-legal"</member>
                      <member>"executive"</member>
                      <member>"iso-designated-long"</member>
                      <member>"na-number-10-envelope"</member>
                    </simplelist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    xprint.mozdev.org release &gt;= 006:
                    <simplelist type="inline">
                      <member>"na-letter"</member>
                      <member>"na-legal"</member>
                      <member>"executive"</member>
                      <member>"folio"</member>
                      <member>"invoice"</member>
                      <member>"ledger"</member>
                      <member>"quarto"</member>
                      <member>"a"</member>
                      <member>"b"</member>
                      <member>"c"</member>
                      <member>"d"</member>
                      <member>"e"</member>
                      <member>"na-6x9-envelope"</member>
                      <member>"na-10x15-envelope"</member>
                      <member>"monarch-envelope"</member>
                      <member>"na-10x13-envelope"</member>
                      <member>"na-9x12-envelope"</member>
                      <member>"na-number-10-envelope"</member>
                      <member>"na-7x9-envelope"</member>
                      <member>"na-9x11-envelope"</member>
                      <member>"na-10x14-envelope"</member>
                      <member>"na-number-9-envelope"</member>
                      <member>"iso-a0"</member>
                      <member>"iso-a1"</member>
                      <member>"iso-a2"</member>
                      <member>"iso-a3"</member>
                      <member>"iso-a4"</member>
                      <member>"iso-a5"</member>
                      <member>"iso-a6"</member>
                      <member>"iso-a7"</member>
                      <member>"iso-a8"</member>
                      <member>"iso-a9"</member>
                      <member>"iso-a10"</member>
                      <member>"iso-b1"</member>
                      <member>"iso-b2"</member>
                      <member>"iso-b3"</member>
                      <member>"iso-b4"</member>
                      <member>"iso-b5"</member>
                      <member>"iso-b6"</member>
                      <member>"iso-b7"</member>
                      <member>"iso-b8"</member>
                      <member>"iso-b9"</member>
                      <member>"iso-b10"</member>
                      <member>"jis-b1"</member>
                      <member>"jis-b2"</member>
                      <member>"jis-b3"</member>
                      <member>"jis-b4"</member>
                      <member>"jis-b5"</member>
                      <member>"jis-b6"</member>
                      <member>"jis-b7"</member>
                      <member>"jis-b8"</member>
                      <member>"jis-b9"</member>
                      <member>"jis-b10"</member>
                      <member>"iso-c3"</member>
                      <member>"iso-c4"</member>
                      <member>"iso-c5"</member>
                      <member>"iso-c6"</member>
                      <member>"iso-designated-long"</member>
                    </simplelist>
                  </para>
                </listitem>
               </itemizedlist>
             </para>
           </listitem>
           <listitem>
             <para>
               Verification:
               Use
<programlisting>
  xplsprinters -l | egrep "^printer:|default-medium=|medium-source-sizes-supported="
</programlisting>
               to view the medium settings for all printers.
               The 'medium-source-sizes-supported='-lines have the format XXX.
             </para>
           </listitem>
          </itemizedlist>
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_default_resolution">
  <question>
    <para>
      How do I change the default printer resolution ?
    </para>
  </question>
  <answer>
    <para>
      This is controlled via the "default-printer-resolution" attribute in the
      document attribute pool (<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/document</filename>
      and/or <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename>).
      Examples:
      <orderedlist>
        <listitem>
          <para>
            Adding/modifying the following line to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default
            resolution for all printers to 600 DPI:
<screen>
  *default-printer-resolution: 600
</screen>
          </para>
        </listitem>
        <listitem>
          <para>
            Adding/modifying the following two lines to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default resolution
            for all printers to 300 DPI except for printer "tekcolor_ps" which
            should default to 1200 DPI:
<screen>
  *default-printer-resolution: 300
  tekcolor_ps.default-printer-resolution: 1200
</screen>
          </para>
        </listitem>
      </orderedlist>

      <note>
        <title>Notes:</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Not all printers support all resolutions. The model-config may restrict
                the available resolutions.
              </para>
            </listitem>
            <listitem>
              <para>
                Setting a resolution which is not supported by either the
                DDX(=driver) or not specified in the model-config will cause Xprt to
                not set a default resolution.
              </para>
            </listitem>
            <listitem>
              <para>
                The PostScript DDX supports the following default resolutions
                <itemizedlist>
                 <listitem>
                   <para>
                    X.org release 6.6 (X116.6):
                    <simplelist type="inline">
                      <member>300</member>
                      <member>600</member>
                      <member>720</member>
                      <member>940</member>
                      <member>1200</member>
                      <member>1440</member>
                      <member>2400</member>
                    </simplelist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    xprint.mozdev.org release &gt;= 006:
                    <simplelist type="inline">
                      <member>75</member>
                      <member>100</member>
                      <member>120</member>
                      <member>150</member>
                      <member>180</member>
                      <member>200</member>
                      <member>240</member>
                      <member>300</member>
                      <member>360</member>
                      <member>400</member>
                      <member>600</member>
                      <member>720</member>
                      <member>940</member>
                      <member>1200</member>
                      <member>1440</member>
                      <member>2400</member>
                    </simplelist>
                  </para>
                </listitem>
              </itemizedlist>

              </para>
            </listitem>
            <listitem>
              <para>
                Verification:
                Use
<programlisting>
  xplsprinters -l | egrep "^printer:|default-printer-resolution=|resolution="
</programlisting>
                to view the resolution settings for all printers.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_default_orientation">
  <question>
    <para>
      How do I change the default settings for "portrait"/"landscape"/"seascape" (=page orientation) ?
    </para>
  </question>
  <answer>
    <para>
      This is controlled via the "content-orientation" attribute in the
      document attribute pool (<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/document</filename>
      and/or <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename>).
      Examples:
      <orderedlist>
        <listitem>
          <para>
            Adding/modifying the following line to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default
            orientation for all printers to "portrait":
<screen>
  *content-orientation: portrait
</screen>
          </para>
        </listitem>
        <listitem>
          <para>
            Adding/modifying the following two lines to/in
            <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> sets the default orientation
            for all printers to "portrait" except for printer "ps003" which should
            default to "landscape":
<screen>
  *content-orientation: portrait
  ps003.content-orientation: landscape
</screen>
          </para>
        </listitem>
      </orderedlist>

      <note>
        <title>Notes:</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Not all printers support all orientations. The model-config may
                restrict the available orientations.
              </para>
            </listitem>
            <listitem>
              <para>
                Setting an orientation which is not supported by either the
                DDX(=driver) or not specified in the model-config will cause Xprt to
                not set a default orientation.
              </para>
            </listitem>
            <listitem>
              <para>
                The PostScript DDX supports the following orientations:
                "portrait", "landscape", "reverse-portrait" and "reverse-landscape".
              </para>
            </listitem>
            <listitem>
              <para>
                Verification:
                Use
<programlisting>
  xplsprinters -l | egrep "^printer:|default_orientation=|orientation="
</programlisting>
                to view the orientation settings for all printers.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry id="how_to_prevent_usage_of_bitmap_fonts">
  <question>
    <para>
      How can I prevent Xprt from using any bitmap(=gfx) fonts ?
    </para>
  </question>
  <answer>
    <para>
      Do not pass any bitmap fonts with the "-fp" (=font path) argument.
      However you have to provide a 'fixed' and a 'cursor' font, a Xserver
      can't start without having these fonts.
      <blockquote><procedure>
        <title>Task list:</title>
        <step>
          <para>
            Create a new directory:
<screen>
% <userinput>mkdir Xp_dummyfonts</userinput>
% <userinput>cd Xp_dummyfonts</userinput>
</screen>
          </para>
        </step>
        <step>
          <para>
            Create a <filename>fonts.alias</filename> file with the following content:
<programlisting>
! alias for "fixed" font
! original from /usr/openwin/lib/X11/fonts/misc/fonts.alias looks like this:
! fixed   "-misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-1"
fixed -*-r-*--*-*-*-*-*-*-iso8859-1
! EOF.
</programlisting>
          </para>
        </step>
        <step>
          <para>
            Copy or link "<filename>6x13.pcf.Z</filename>" and "<filename>cursor.pcf.Z</filename>" and create <filename>fonts.dir</filename>
<screen>
% <userinput>ln -s /usr/openwin/lib/X11/fonts/misc/6x13.pcf.Z .</userinput>
% <userinput>ln -s /usr/openwin/lib/X11/fonts/misc/cursor.pcf.Z .</userinput>
% <userinput>mkfontdir $PWD</userinput>
</screen>
          </para>
        </step>
        <step>
          <para>
            Verify: The directory should now look like this:
<screen>
% <userinput>ls -1</userinput>
<computeroutput>6x13.pcf.Z
cursor.pcf.Z
fonts.alias
fonts.dir</computeroutput>
</screen>
          </para>
        </step>
        <step>
          <para>
            Add the full path (e.g. /home/xp/Xp_dummyfonts) as last element
            of the font path when starting Xprt:
<screen>
  % <userinput>Xprt -fp /usr/openwin/lib/X11/fonts/Type1/,/home/xp/Xp_dummyfonts :12</userinput>
</screen>
          </para>
        </step>
      </procedure></blockquote>

<!-- fixme: puck is dead, need replacement
      <note>
        <para>
          I created a tarball from these instructions, get it from
          <ulink url="http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/Xp_dummyfonts.tar.gz">http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/Xp_dummyfonts.tar.gz</ulink>
          Unpack it and add the new dir to your fontpath)
        </para>
      </note>
-->
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_manual_list_of_printers">
  <question>
    <para>
      I want only my manually added printers managed by Xprint. How can I
      prevent Xprt from looking-up the printer names automatically ?
    </para>
  </question>
  <answer>
    <para>
      Add a line with "Augment_Printer_List %none%" to
      <filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename> (or
      <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/Xprinters</filename>) and add lines with
      "Printer &lt;name&gt;" for each printer &lt;name&gt;.
      Example:
<screen>
Augment_Printer_List %none%
Printer ps001
Printer ps003
Printer hplaser6
</screen>
      will add only the printers "ps001", ps003" and "hplaser6".
    </para>
  </answer>
</qandaentry>

<qandaentry id="configure_custom_script_to_enumerate_system_printers">
  <question>
    <para>
      How can I specify an own program/script to enumerate the printers on my system ?
    </para>
  </question>
  <answer>
    <para>
      Add "Augment_Printer_List my_script" to <filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename> (or
      <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG</envar>}/print/Xprinters</filename>).
      The script must return the printer names - one per line, ASCII-only - to stdout.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Which program is used by default by Xprt to enumerate the printers on my system ?
    </para>
  </question>
  <answer>
    <para>
      This depends on the OS:
      <itemizedlist>
        <listitem>
          <para>
            On Solaris (and most other OSes exclusing AIX and Linux):
<screen>
% <userinput>lpstat -a | cut -d " " -f 1</userinput>
</screen>
          </para>
        </listitem>
        <listitem>
          <para>
            On Linux:
            <itemizedlist>
              <listitem>
                <para>
                  For Xprt build from X11R6.x X.org sources:
<screen>
% <userinput>lpc status | grep -v '^\t' | sed -e /:/s///</userinput> # '\t' means TAB
</screen>
                </para>
              </listitem>
              <listitem>
                <para>
                  For Xprt build from xprint.mozdev.org &lt;= release 008 sources (both lines are executed
                  to support both LPRng and CUPS (using the CUPS *BSD compatibility tools)):
<screen>
% <userinput>lpc status | awk '/:$/ &amp;&amp; !/@/ { print $1 }' | sed -e /:/s/// ; \
  lpc -a status | awk '/@/ &amp;&amp; !/:/ { split( $1, name, \"@\" ); print name[1]; }'</userinput>
</screen>
                </para>
              </listitem>
              <listitem>
                <para>
                  Xprt build from xprint.mozdev.org &gt;= release 009 sources uses a more flexible scheme
                  which tries to enumerate the print spoolers in the order "CUPS" (using the normal CUPS
                  (SYSV-like) commands), "LPRng" and finally "*BSD", the first working (=print queues are
                  found) print spooler is chosen.
                  The spooler(s) being used (and the query order) can be changed by the "-XpSpoolerType"
                  command line option.
                  The list of commands used to enumerate the queues for a specific spooler type
                  can be found in <filename>xc/programs/Xserver/Xprint/spooler.c</filename>
                </para>
              </listitem>

            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            On AIX v4:
<screen>
% <userinput>lsallq | grep -v '^bsh$'</userinput>
</screen>
          </para>
        </listitem>
      </itemizedlist>
      <note>
        <title>Notes:</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                See <filename>xc/programs/Xserver/Xprint/Init.c</filename> (xprint.mozdev.org &gt;= release 009 uses
                <filename>xc/programs/Xserver/Xprint/spooler.c</filename>) for a complete list of commands
                used on the specific platforms to enumerate the printers.
              </para>
            </listitem>
            <listitem>
              <para>
                Note that the output is always piped through "sort" to get an
                alphabetical order (the "default" printer is not chosen/defined
                here(=server side), the client side is responsible to choose a default
                printer.
                See FAQ item about the <envar>${XPRINTER}</envar> env var how to set your default
                printer).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Where can I get more PostScript Type1 fonts from ?
    </para>
  </question>
  <answer>
    <para>
      Some sources:
     <itemizedlist>
       <listitem>
         <para>
           Adobe:

           <itemizedlist>
             <listitem>
               <para>
                 Commercial fonts:
                 <ulink url="http://www.adobe.com/type/main.html">http://www.adobe.com/type/main.html</ulink>
               </para>
             </listitem>
             <listitem>
               <para>
                 Free Euro font:
                 <itemizedlist>
                   <listitem>
                     <para>
                       Single-glyph (e.g. it contains <emphasis>only</emphasis> the euro char) euro font:
                       <ulink url="http://www.adobe.com/type/eurofont.html">http://www.adobe.com/type/eurofont.html</ulink> or
                       <ulink url="ftp://ftp.adobe.com/pub/adobe/type/win/all/">ftp://ftp.adobe.com/pub/adobe/type/win/all/</ulink>
                       ("eurofont.exe" can be unzipped using "unzip")
                     </para>
                   </listitem>
                   <listitem>
                     <para>
                       ISO8859-15:
                       XXX - WANTED!!
                     </para>
                   </listitem>
                 </itemizedlist>
               </para>
             </listitem>
           </itemizedlist>
         </para>
       </listitem>
       <listitem>
         <para>
           Solaris shipps with various PS Type 1 fonts:
           <itemizedlist>
             <listitem>
               <para>
                 Arabic:
                 <filename>/usr/openwin/lib/locale/ar/X11/fonts/Type1/</filename>
                 (<filename>fonts.dir</filename> and <filename>fonts.scale</filename> missing, maybe they miss the
                 presentation forms a&amp;b, too [unconfirmed])
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-13 (Latin 8):
                 <filename>/usr/openwin/lib/locale/iso_8859_13/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-5 (Latin 5):
                 <filename>/usr/openwin/lib/locale/iso_8859_9/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-8/Hebrew:
                 <filename>/usr/openwin/lib/locale/iso_8859_8/X11/fonts/Type1</filename>
                 (BROKEN, even "type1fix" cannot fix them. Use the hebrew fonts from
                 <!-- XXX: FixMe!! -->
                 <ulink url="broken-link/PS_Type1_iso8859-8.tar.gz">
                 broken-link-/PS_Type1_iso8859-8.tar.gz</ulink>)
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-7/Modern greek:
                 <filename>/usr/openwin/lib/locale/iso_8859_7/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-5/Cryrillic:
                 <filename>/usr/openwin/lib/locale/iso_8859_5/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-4 (Latin 4):
                 <filename>/usr/openwin/lib/locale/iso_8859_4/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-2 (Latin 2):
                 <filename>/usr/openwin/lib/locale/iso_8859_2/X11/fonts/Type1/</filename>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-1 (Latin 1) and Symbol fonts:
                 <filename>/usr/openwin/lib/X11/fonts/Type1/</filename>
               </para>
             </listitem>
           </itemizedlist>
         </para>
       </listitem>
<!-- XXX/FixMe: puck is dead, need replacement... ;-(
       <listitem>
         <para>
           Some of my own collections:
           (see <ulink url="http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/">
           http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/</ulink>):
          <itemizedlist>
             <listitem>
               <para>
                 KOI8-R:
                 <ulink url="http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/PS_Type1_koi8-r.tar.gz">
                 http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/PS_Type1_koi8-r.tar.gz</ulink>
               </para>
             </listitem>
             <listitem>
               <para>
                 ISO-8859-8/Hebrew:
                 <ulink url="http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/PS_Type1_iso8859-8.tar.gz">
                 http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/postscript_type_1/PS_Type1_iso8859-8.tar.gz</ulink>
               </para>
             </listitem>
           </itemizedlist>
         </para>
       </listitem>
-->
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      What are PMF fonts (e.g. the *.pmf fonts in
      <filename><envar>${XPCONFIGDIR}</envar>/C/print/models/%model_name%/fonts/</filename> (or
      <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/%model_name%/fonts/</filename>)) ?
    </para>
  </question>
  <answer>
    <para>
      PMF "fonts" are "printer metric files" (.pmf) that describe the metrics
      of the fonts (which means they do not contain any data to render the
      fonts - they contain only the plain metrics of a font) which are built
      into the printer (ROM or via font catridge etc.).
      The file format is identical to the PCF ("Portable Compiled Format") font
      format except that the bitmap data is not provided.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Can I use the fontserver ("xfs") with Xprt ?
    </para>
  </question>
  <answer>
    <para>
      You can use Xprt with the font server ("xfs") like with any other
      Xserver - but it is not recommded since the font server protocol does
      not allow access to the native font format and therefore disables font
      download, e.g. both PS Type1 and TrueType fonts cannot be downloaded
      anymore and Xprt will fall-back to embed them as bitmap glyphs in the
      print job (e.g. the fonts will still appear correctly in the printout,
      but the quality may be reduced since downloaded fonts are always better
      than bitmap glyphs).
      (users of xprint.mozdev.org-release &lt;= 006 may see
      <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=2092">xprint.mozdev.org bug 2092</ulink>
      if they use "xfs"; this has been fixed in the 007 release!)
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      What is a "model-config" ?
    </para>
  </question>
  <answer>
    <para>
      The term "model-config" refers to the subdirs in
      <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/</filename>.
      There subdirs contain information
      about the attributes for a specific printer model or family/class of
      printer models. In particular there are two kinds of information:

      <itemizedlist>
        <listitem>
          <para>
            "<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/${NAME_OF_MODEL}/model-config</filename>"
            this file defines a set of attributes supported by this specific printer
            (-family/-class/etc.)
            and
          </para>
        </listitem>
        <listitem>
          <para>
            "<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/${NAME_OF_MODEL}/fonts/</filename>" - a
            directory which contains a set of PMF (printer metrics file) fonts
            builtin into the printer itself (actually the PMF "font" format
            contains only metrics information and no glyphs).
            These fonts are only available to the application <emphasis>after</emphasis> the
            application has selected a printer and configured it (for developers:
            After <function>XpSetContext</function> has been called).
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Where can I store the default values for printers ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I create my own model-config ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I create my own PMF "fonts" ?
    </para>
  </question>
  <answer>
    <para>
      XXX - no solution yet, but
      <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=2430">xprint.mozdev.org bug 2430
      ("RFE: Need tool to create PMF (printer metrics file) fonts")</ulink>
      has been filed to create a freeware tool to create such fonts.
    </para>
  </answer>
</qandaentry>

<qandaentry id="where_can_i_get_more_model_configs_from">
  <question>
    <para>
      Where can I get more model-configs from ?
    </para>
  </question>
  <answer>
    <para>
      If you miss a model-config for your printer please open a bug/RFE at
      <ulink url="http://xprint.freedesktop.org/bugzilla/enter_bug.cgi?product=xprint&amp;component=Server%3A%20Config%3A%20model-configs">
      http://xprint.freedesktop.org/bugzilla/enter_bug.cgi?product=xprint&amp;component=Server%3A%20Config%3A%20model-configs</ulink>
      (e.g. <ulink url="http://xprint.freedesktop.org/bugzilla/enter_bug.cgi">http://xprint.freedesktop.org/bugzilla/enter_bug.cgi</ulink>, product "Xprint", component
      "Server: Config: model-configs").
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      If I install Xprt &amp;co. as "root" in the default location and don't need
      to set <envar>${XPCONFIGDIR}</envar> - where are my configuration files located then ?
    </para>
  </question>
  <answer>
    <para>
      This is platform-specific, based on the "XPrintDir" Imake variable set
      at build time. Default location for plain X11R6.x is
      "<filename>${XProjectRoot}/lib/X11/xserver</filename>" (set at build time), but some
      platforms modify "XPrintDir" to alternate locations:
      <itemizedlist>
        <listitem>
          <para>
            Solaris sets <envar>${XPCONFIGDIR}</envar> to <filename class="directory">/usr/openwin/server/etc/XpConfig/</filename>
          </para>
        </listitem>
        <listitem>
          <para>
            Linux (non-Debian) sets <envar>${XPCONFIGDIR}</envar> to <filename>/usr/X11R6/lib/X11/xserver/</filename>
            or <filename>/etc/X11/xserver/</filename>
          </para>
        </listitem>
        <listitem>
          <para>
            Debian Linux sets <envar>${XPCONFIGDIR}</envar> to <filename>/usr/share/Xprint/xserver/</filename>
          </para>
        </listitem>
      </itemizedlist>
      <tip>
        <para>
          If you don't know where the default location for <envar>${XPCONFIGDIR}</envar> is
          located try
<programlisting>
  strings -a /usr/openwin/bin/Xprt | grep XPRINTDIR
</programlisting> - it <emphasis>may</emphasis>
          return some debug info from the binary containing the builtin XpConfig
          path.
        </para>
      </tip>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Are config files and/or the PMF fonts architecture dependent ?
    </para>
  </question>
  <answer>
    <para>
      The PMF fonts are a variant of the PCF font format, they are
      (like the PCF format) architecture-independent.
      These fonts must be kept together with the other model config data since
      they depend on the printer model (de facto
      <filename><envar>${XPCONFIGDIR}</envar>/C/print/models/</filename> (and/or
      <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/</filename>) should be supplied by the printer
      vendors (but most people will create their own models on demand since
      I doubt that any vendor except HP, Sun and xprint.mozdev.org staff ever
      looked at that stuff)).
      Per definition they are read-only data supplied by the vendor, but
      modifying them may be usefull, too.
      I would say it is recommended to put treat all Xprint files in
      <envar>${XPCONFIGDIR}</envar> as read-only vendor data; admins should create copies of
      this tree on demand (and/or (soft-)link some files) and set
      <envar>${XPCONFIGDIR}</envar> to the modified config data.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Can I localise my Xprint/Xprt configuration (l10n) ?
    </para>
  </question>
  <answer>
    <para>
      Yes, Xprt supports localisation ("l10n") by default. Default values for
      all locales are stored in <filename><envar>${XPCONFIGDIR}</envar>/C/print/</filename>, locale-specific
      settings can be set in <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/</filename>
      Rules:
      <itemizedlist>
        <listitem>
          <para>
            Attribute pools
            ("<filename><envar>${XPCONFIGDIR}</envar>/*/print/attributes/document</filename>",
             "<filename><envar>${XPCONFIGDIR}</envar>/*/print/attributes/job</filename>",
             "<filename><envar>${XPCONFIGDIR}</envar>/*/print/attributes/printer</filename>" and
             "<filename><envar>${XPCONFIGDIR}</envar>/*/print/models/*/model-config</filename>"):
            "document", "job" and "printer" attribute pools and printer
             model-configs are sourced first from the
             "<filename><envar>${XPCONFIGDIR}</envar>/C/print/</filename>"-directory, then they are overridden by any
             attributes from the locale-specific pools (in
             "<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/</filename>"), e.g. any values set in
             "<filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/*</filename>" and
             "<filename><envar>${XPCONFIGDIR}</envar>/C/print/models/*/model-config</filename>" will automatically
             apply to all other locales unless they are overridden by
             locale-specific versions of these files
             ("<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/*</filename>",
             "<filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/models/*/model-config</filename>")
          </para>
        </listitem>
        <listitem>
          <para>
            "Xprinters" (list of printers):
            If there is a locale-specific <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/Xprinters</filename> present
            it will be used instead of <filename><envar>${XPCONFIGDIR}</envar>/C/Xprinters</filename> (e.g. values set
            in <filename><envar>${XPCONFIGDIR}</envar>/C/Xprinters</filename> will be ignored and the values from
            <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/Xprinters</filename> will be used instead).
          </para>
        </listitem>
        <listitem>
          <para>
            Xprt will determinate the locale which should be used based on the
            <envar>${LANG}</envar>-environment vaiable at startup time. If there is no such
            variable set at that time LANG="C" is assumed.
            <note>
              <title>Note:</title>
              <para>
                Attribute values for paper names and orientation names refer to
                builtin strings in the DDX code (which are itself based on
                international standards), these cannot be changed to your own
                "inventions" (it does it make sense to try to "localize" paper names -
                "ISO-A4" is "ISO-A4" even in japanese/hebrew/german etc.).
                Locale-spefific attribute pools can set their own, different values -
                but only within the allowed range of values supported by the DDX and
                printers's model-config.
              </para>
            </note>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Can I execute my own scripts to process the PostScript files generated
      by Xprt ?
    </para>
  </question>
  <answer>
    <para>
      Yes, there are at least two possible solutions:
      <orderedlist>
        <listitem>
          <para>
            Create your own model-config which uses a custom "xp-spooler-command"
            value - the xprint.mozdev.org's
            "PSspooldir" model config (see
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/models/PSspooldir/</filename>" and
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/printer</filename>" and
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename>")
            and
            "PS2PDFspooldir-GS" model config (see
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/models/PS2PDFspooldir-GS/</filename>" and
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/printer</filename>" and
            "<filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename>")
            are good examples for that.
          </para>
        </listitem>
        <listitem>
          <para>
            Use an existing "model-config" (which would normally send it's data to
            a printer using the default print spooler command) and provide a
            custom "xp-spooler-command".
            <blockquote><procedure>
              <title>
                Example (using "SPSPARC2" as printer model, <filename>/w/xp_conv</filename>
                as the script to execute and "myscriptprinter" as name of the printer):
              </title>
              <step>
                <para>
                  Edit <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/printer</filename> and add these lines
                  (Xprt will replace "%printer-name%" with the printer's name,
                  "%copy-count%" with the number of job copies, "%job-name%" with the
                  job's title and "%options%" with any custom spooler options):
<screen>
myscriptprinter.xp-model-identifier: SPSPARC2
myscriptprinter.xp-spooler-command: /w/xp_conv -p %printer-name% -c %copy-count% -t %job-name% -o "%options%"
</screen>
                </para>
              </step>
              <step>
                <para>
                  Edit <filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename> and append this line:
<screen>
Printer myscriptprinter
</screen>
                </para>
              </step>
            </procedure></blockquote>

          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I disable "xp_ps_spooldir_tmp_Xprintjobs" / "xp_pdf_spooldir_tmp_Xprintjobs" printer targets ?
    </para>
  </question>
  <answer>
    <para>
      Edit <filename><envar>${XPCONFIGDIR}</envar>/C/print/Xprinters</filename> and
      remove or comment-out (using '#') the lines "Printer xp_ps_spooldir_tmp_Xprintjobs"
      and "Printer xp_pdf_spooldir_tmp_Xprintjobs".

      <note>
        <title>Note:</title>
        <para>
          Note that Xprt will <emphasis>NOT</emphasis> start if this printer has been removed/disabled
          and no other print queue is available (e.g. if "xp_ps_spooldir_tmp_Xprintjobs"
          and "Printer xp_pdf_spooldir_tmp_Xprintjobs" are the only printer target available).
        </para>
      </note>
    </para>
  </answer>
</qandaentry>

</qandadiv>


<qandadiv id="faq_troubleshooting">
<title>Troubleshooting</title>

<qandaentry id="printout_only_covers_1_4_of_the_paper">
  <question>
    <para>
      "Printing itself works but the printout covers only 1/4 of the paper - what am I doing wrong ?"
    </para>
  </question>
  <answer>
    <para>
      This is usually an indicator for a wrong DPI setting. The default
      "PSdefault" model config uses 300 DPI but some printers only support
      600 DPI.
    </para>
    <formalpara>
      <title>Workaround:</title>
      <para>
        Edit <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename> and replace the line
        "*default-printer-resolution: 300" with
        "*default-printer-resolution: 600"
        (Note that locale-specific settings in
        <filename><envar>${XPCONFIGDIR}</envar>/<envar>${LANG}</envar>/print/attributes/document</filename> always override values
        set in <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/document</filename>.)
      </para>
    </formalpara>
    <formalpara>
      <title>Solution:</title>
      <para>
        Create a model-config for your printer which only contains attributes
        supported by your printer ("printer-resolutions-supported" is the
        attribute in the "model-config" which holds the space-seperated list
        of DPI values which are supported by the printer).
      </para>
    </formalpara>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
     "Printing works but I get large borders/margins..." / "[Top] margin is too small" /
     "Margins are wrong" / etc.
    </para>
  </question>
  <answer>
    <para>
      Two possible causes:
      <itemizedlist>
        <listitem>
          <para>
            Usually same issue as "Printing itself works but the printout covers
            only 1/4 of the page"-issue: Wrong DPI.
            Solution: Check the DPI value and adjust it as described in the FAQ item
            above. Common DPI values for the PostScript DDX are 240, 300, 360, 400
            and 600 DPI.
          </para>
        </listitem>
        <listitem>
          <para>
            You are trying to print "US-letter" on a "DIN-A4" paper or "DIN-A4" on
            "US-letter".
          </para>
          <para>
            Solution: Check your paper settings
          </para>
          <para>
            Note that the default papersize for Xprt depends on the locale
            (e.g. on the env var <envar>${LANG}</envar>) Xprt is running in - "en_US"&amp;co. get
            US-letter, all others use DIN-A4 (incl. german/austrian etc. locales)).
            Exception from this rule: If the selected printer does not support the
            default paper size it will set no default paper size for this printer
            (then the application side has to make an explicit choice).
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "sh: lpc: command not found" on
      my Linux machine. What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      Some versions of Xprt look up printer queues using "lpc" on Linux.
      In this case "lpc" cannot be found for some reason.
      Solution:
      Find the place where "lpc" is installed on your machine (some
      distributions put it into <filename>/usr/sbin</filename>, some into <filename>/usr/bin/</filename>) and check
      whether your <envar>PATH</envar> env var includes this directory.
      Example (if "lpc" is located in <filename>/usr/sbin/</filename>):
<screen>
  % <userinput>which lpc</userinput>
  <computeroutput>/usr/sbin/lpc</computeroutput>
  % <userinput>export PATH=$PATH:/usr/sbin</userinput>
  # Start Xprt ...
  % <userinput>Xprt &lt;your-options-come-here&gt;</userinput>
</screen>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      When the application (=client side) tries to connect to the Xprt
      (Xserver) side it fails with a
<screen>
<computeroutput>Xlib: connection to "meridian:52.0" refused by server
Xlib: Client is not authorized to connect to Server</computeroutput>
</screen>
      What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      X11 implements access control. You can have host-based, cookie-based (a
      "cookie" is used like a passport) or user-based (SecureRPC or Kerberos5)
      authentification. <citerefentry><refentrytitle>Xsecurity</refentrytitle><manvolnum>__miscmansuffix__</manvolnum></citerefentry>
      has most of the details.
      <orderedlist>
        <listitem>
          <formalpara>
          <title>
            No access control:
          </title>
          <para>
            If you do not want to use access control for Xprt then you can start it
            with the option "-ac" (see <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>)
            to disable the access control.
            Example:
<screen>
  % <userinput>Xprt -ac -audit 4 :12</userinput>
</screen>
            will start Xprt with access control disabled and with auditing enabled
            (e.g. the "-audit 4" option).
            <warning>
              <title>
                WARNING
              </title>
              <para>
                Disabling the access control will enable <emphasis>everyone</emphasis> who can
                access Xprt to print on your printers (that's why the above example
                shows how to use auditing, too - that you can see who does something
                with Xprt...) !!
              </para>
            </warning>
          </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
          <title>
            Host-based access control:
          </title>
          <para>
            Host-based access control can be archived using <filename>/etc/X&lt;dpy&gt;.hosts</filename>
            (&lt;dpy&gt; == display number, e.g. <filename>/etc/X0.hosts</filename> for display 0 (see
            <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>
            manual page for further details)).
            <blockquote><procedure>
              <title>Example</title>
              <step>
                <para>
                  Add the following line to `<filename>/etc/X12.hosts</filename>' (assuming you want that
                  the hosts 'merkur' and 'mars' should be able to access the Xprt
                  server running as display 12 on your host 'neptun'):
<screen>
INET:merkur
INET:mars
</screen>
                </para>
              </step>
              <step>
                <para>
                  Start Xprt
                </para>
              </step>
              <step>
                <para>
                  Verify that Xprt is correctly configured:
<screen>
% <userinput>export DISPLAY=neptun:12</userinput>
% <userinput>xhost</userinput>
<computeroutput>access control enabled, only authorized clients can connect
INET:localhost
LOCAL:
INET:merkur
INET:mars</computeroutput>
</screen>
                </para>
              </step>
            </procedure></blockquote>
          </para>
          </formalpara>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "failed to set default font path
      '...' Fatal server error: could not open default font 'fixed'".
      What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      This means one or more components in the font path (set via the option
      "-fp") are either...
      <itemizedlist>
        <listitem>
          <para>
            ... not valid
          </para>
        </listitem>
        <listitem>
          <para>
            ... contain fonts not supported by this Xserver (e.g. support has not
            be compiled "in" (usually happens for TrueType (which are only support for Solaris version
            of Xprt and xprint.mozdev.org releases &ge; 008), OpenType (which are only supported by
            xprint.mozdev.org releases 009 or higher) or F3 fonts (Sunsoft/F3 fonts are Solaris-specific
            and <emphasis>not</emphasis> supported by other vendors (AFAIK))
            when support for these fonts was not enabled at build time))
          </para>
        </listitem>
        <listitem>
          <para>
            ... no font or font alias in the font path matches the name "fixed"
          </para>
        </listitem>
        <listitem>
          <para>
            ... an entry in <filename>fonts.dir</filename> or <filename>fonts.alias</filename>
            with the name "fixed" which references a non-existing or non-readable file
          </para>
        </listitem>
      </itemizedlist>

    </para>
  </answer>
</qandaentry>


<qandaentry>
  <question>
    <para>
      Just copying my fonts into a directory and adding the path to my Xprt
      command line didn't work - I always get "Fatal server error: could not
      open default font 'fixed'". What am I doing wrong ?
    </para>
  </question>
  <answer>
    <para>
      Every Xserver needs an index file called <filename>fonts.dir</filename> to tell it which
      fonts are available in this directory and which properties these fonts
      have.
    </para>
    <para>
      If you are lucky there may be already a <filename>fonts.scale</filename> file which can be
      used by "mkfontdir" to create the <filename>fonts.dir</filename> file.
      If there is no <filename>fonts.scale</filename> then you have to create your own
      <filename>fonts.dir</filename>/<filename>fonts.scale</filename> either by hand or
      via tools like "mkfontscale" (works for all types of scaleable fonts),
      "type1inst" (for PS Type1 fonts; see
      <ulink url="http://packages.debian.org/stable/utils/type1inst.html">http://packages.debian.org/stable/utils/type1inst.html</ulink>)
      or "ttmkfdir" (for TrueType fonts; see
      <ulink url="http://packages.debian.org/stable/x11/ttmkfdir.html">http://packages.debian.org/stable/x11/ttmkfdir.html</ulink>).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "Fatal server error: Cannot
      establish any listening sockets - Make sure an X server isn't already
      running". What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      There is already a Xserver running at the display ID you have specified
      to start Xprt (for example your framebuffer Xserver runs at ":0" then
      Xprt can't run at the same display display).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "Fatal server error: Failed to
      establish all listening sockets". What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      This means that the Xserver could not open one of it's sockets. Check
      the permission of /tmp/.X11-pipe and /tmp/.X11-unix (on Solaris a
      Xserver must run set-gid "root" to access these directories).
      Either fix the permission or start Xprt with the option "-pn". Using this
      option requires to access the server <emphasis>always</emphasis> with
      &lt;hostname&gt;:&lt;displaynum&gt; (see <citerefentry><refentrytitle>Xserver</refentrytitle><manvolnum>__appmansuffix__</manvolnum></citerefentry>
      manual page for the side-effects of this option).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "Fatal server error: could not
      open default font 'fixed'" or "Fatal server error: could not open default
      cursor font 'cursor'".
    </para>
  </question>
  <answer>
    <para>
      All Xservers at least two fonts as the minimum: One fixed-width font
      ("fixed") and one font for the cursor ("cursor"). Be sure that the font
      path contains these fonts.
<!-- XXX/FixMe: puck is dead, need replacement... ;-(
      I created a tarball which contains only these two fonts, get it from
      <ulink url="http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/Xp_dummyfonts.tar.gz">
      http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/fonts/Xp_dummyfonts.tar.gz</ulink>
-->
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt refuses to start with the message "Fatal server error: no screens
      found". What does that mean ?
    </para>
  </question>
  <answer>
    <formalpara>
      <title>Cause:</title>
      <para>
        This means that Xprt could not find any printers. Either there are no
        printers installed, "lpstat"/"lpc" could not find any printers or the
        configuration does not contain any manual printer configurations
        (see Q/A item "Which program is used by default by Xprt to enumerate the
        printers on my system" for further details...).
      </para>
    </formalpara>

    <formalpara>
      <title>Solution:</title>
      <para>
        Two solutions:
        <orderedlist>
          <listitem>
            <formalpara>
            <title>
              Using "PSspooldir" model:
            </title>
            <para>
              Xprt releases from <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink> provide the "PSspooldir"
              model config for such cases. Just edit the "<filename>Xprinters</filename>" file and add
              this line:
<screen>
Printer xp_ps_spooldir_tmp_Xprintjobs
</screen>
              this will add the pre-configured (see
              <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/printer</filename>) "xp_ps_spooldir_tmp_Xprintjobs"
              printer which will send jobs to the directory "/tmp/Xprintjobs/"
              instead to a printer queue.
              (This feature was added in the xprint.mozdev.org release 007, see
              <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=2475">xprint.mozdev.org bug 2475 ("RFE: Need
              model-config which spools print jobs in a predefined directory")</ulink>.)
            </para>
            </formalpara>
          </listitem>
          <listitem>
            <formalpara>
              <title>
                Manual setup (task list):
              </title>
              <para>
                <blockquote>
                  <procedure>
                    <step>
                      <para>
                        Provide a simple "Xprinters" spec file which contains a dummy
                        queue.
                        Example:
<screen>
# Create "Xprinters_onlydummy" file which turns autolookup of printers
# OFF (using "Augment_Printer_List %none%") and provides one dummy
# queue called "ps_myscript" instead (using "Printer ps_myscript")
% <userinput>echo "Augment_Printer_List %none%" >Xprinters_onlydummy</userinput>
% <userinput>echo "Printer ps_myscript"         >>Xprinters_onlydummy</userinput>
</screen>
                      </para>
                    </step>
                    <step>
                      <para>
                        Edit <filename><envar>${XPCONFIGDIR}</envar>/C/print/attributes/printer</filename> and add these
                        two lines:
<screen>
ps_myscript.xp-model-identifier: PSdefault
ps_myscript.xp-spooler-command: /home/sanja/xprint_test/my_xprt_cat_script.sh
</screen>
                        This means that the printer "ps_myscript" now uses the "PSdefault"
                        printer model and it will feed the jobs to the script
                        "/home/sanja/xprint_test/my_xprt_cat_script.sh" (via stdin).
                        Note that the absolute path is required for "*xp-spooler-command".
                      </para>
                    </step>
                    <step>
                      <para>
                        Start Xprt on display 18, passing the "Xprinters_onlydummy"
                        using the "-XpFile" option:
<screen>
% <userinput>Xprt -XpFile ./Xprinters_onlydummy -pn -ac -audit 4 :18</userinput>
</screen>
                      </para>
                    </step>
                  </procedure>
                </blockquote>
              </para>
            </formalpara>
          </listitem>
        </orderedlist>
      </para>
    </formalpara>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt prints a warning like "Xp Extension: could not find config dir
      /usr/X11R6/lib/X11/C/print" - what does that mean ?
    </para>
  </question>
  <answer>
    <para>
      This is actually the worst case what can happen.
      The message indicates that Xprt was unable to find it's configuration
      data.
    </para>
    <formalpara>
      <title>Solution:</title>
      <para>
        Two solutions are possible:
        <itemizedlist>
          <listitem>
            <para>
              Install the configuration data at the requested location
              (<filename>/usr/X11R6/lib/X11/C/print/</filename> in this example)
            </para>
          </listitem>
          <listitem>
            <para>
              Set the <envar>${XPCONFIGDIR}</envar> env var to the location of the Xprt
              configuration directory.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </formalpara>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Xprt crashes with "Fatal server error: Beziers this big not yet supported"
      What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      This is a known issue in the X11R6.5.1 code. In rare cases some PostScript
      Type1 fonts can trigger this.
      See "My PS Type1 font does not work with my Xserver" ...
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
     "My PS Type1 font does not work with my Xserver - how can I fix this ?"
    </para>
  </question>
  <answer>
    <para>
      Some PS Type1 do not work out-of-the-box with all PS Type1 font engines -
      some will work with the Adobe font engine (used in Solaris Xsun) but not
      with the X.org font engine (or the other way round) or the fonts are
      simply broken.

      The following procedure will try to fix this problem:
      Get the "type1fix" perl script the TeXTrace package
      (<ulink url="http://www.inf.bme.hu/~pts/textrace-latest.tar.gz">http://www.inf.bme.hu/~pts/textrace-latest.tar.gz</ulink>)
      and run it over the fonts.

      Example 1 (filter fonts):
<screen>
# Broken PFA fonts are in broken_fonts/
% <userinput>mkdir fixed_fonts ; cd fixed_fonts</userinput>
% <userinput>for i in ../broken_fonts/*.pfa ; do
    echo " ------- $i" ;
    type1fix.pl --ofmt=pfa --infile=$i --outfile=$(basename ${i}) ;
  done</userinput>
</screen>

      Example 2 (filter fonts and convert them to PFB on-the-fly; do not forget
      to update <filename>fonts.scale</filename> and run "mkfontdir" (to update <filename>fonts.dir</filename>) ;
      systems which use the Adobe font engine (like Solaris/Xsun) may require
      to run "makepsres", too):
<screen>
# Broken PFA fonts are in broken_fonts/
% <userinput>mkdir fixed_fonts ; cd fixed_fonts</userinput>
% <userinput>for i in ../broken_fonts/*.pfa ; do
    echo " ------- $i" ;
    type1fix.pl --ofmt=pfb --infile=$i --outfile=$(basename ${i%.pfa}.pfb) ;
  done</userinput>
</screen>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      I can't get it working. I have set <envar>${DISPLAY}</envar> correctly to point to the
      Xprt display and... ... What is going wrong ?
    </para>
  </question>
  <answer>
    <para>
      Do not set <envar>${DISPLAY}</envar> to the Xprt server. You still need your normal
      Xserver for your video card - Xprt is only for your printer(s).
      Applications look up Xprt servers via the <envar>${XPSERVERLIST}</envar> env var, <emphasis>NOT</emphasis>
      via the <envar>${DISPLAY}</envar> env var.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      When I try to print via Xprint I get the message "Fatal server error:
      unable to exec '/usr/bin/lp'". What is going wrong here ?
    </para>
  </question>
  <answer>
    <para>
      This usually means that the spooler application "<filename>/usr/bin/lp</filename>"
      could not be launched. This is usually the result when
      <filename>/usr/bin/lp</filename> does not exist or
      cannot be executed (for example, shell scripts without the +x (executable) flag etc.).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      The Solaris Xprt prints some error messages about PostScript fonts like
      "FOOBAR not found, using Courier. CMEX0123 not found, using Courier."
      etc. and uses "Courier" instead of these fonts...
    </para>
  </question>
  <answer>
    <formalpara>
      <title>Cause:</title>
      <para>
        The Solaris (Adobe-based) PostScript font engine requires a "PostScript
        resource database" file named "<filename>PSres.upr</filename>" to use the PostScript fonts
        correctly.
      </para>
    </formalpara>
    <formalpara>
      <title>Solution:</title>
      <para>
        Create the missing <filename>PSres.upr</filename> database.
        <blockquote>
          <procedure>
            <title>Steps to create the missing "<filename>PSres.upr</filename>" file (task list):</title>
            <step>
              <para>
                Go to the location where the matching fonts are installed (we're using
                <filename>/home/sanja/mathml_fonts/tex_cmps/Type1/</filename> in this example):
<screen>
% <userinput>cd /home/sanja/mathml_fonts/tex_cmps/Type1//</userinput>
</screen>
              </para>
            </step>
            <step>
              <para>
                Create "<filename>PSres.upr</filename>" using the "makepsres" command.
<screen>
% <userinput>makepsres</userinput>
</screen>
              </para>
            </step>
            <step>
              <para>
                Validation:
                Make sure the file has been created:
<screen>
% <userinput>ls -l PSres.upr</userinput>
</screen>
              </para>
            </step>
            <step>
              <para>
                Restart Xprt server(s):
<screen>
% <userinput>/etc/init.d/xprint restart</userinput>
</screen>
              </para>
            </step>
            <step>
              <para>
                Restart application which uses these fonts
              </para>
            </step>
          </procedure>
        </blockquote>
      </para>
    </formalpara>
    <formalpara>
      <title>References:</title>
      <para>
        <itemizedlist>
          <listitem><para><citerefentry><refentrytitle>makepsres</refentrytitle><manvolnum>1</manvolnum></citerefentry> manual page</para></listitem>
          <listitem><para><ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=120560">bugzilla.mozilla.org 120560 ("Solaris Xsun does not like CMEX10/CMSY10 Type1 fonts")</ulink></para></listitem>
          <listitem><para><ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=142718">bugzilla.mozilla.org 142718 ("Document how to get the MathML fonts to work on Solaris")</ulink></para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
     "Xprt refused to start, complaining about a missing dir
     (<filename>/etc/X11/xserver/C/print/</filename> directory)... I created it by hand (empty) and
     started Xprt but it still does not work properly..."
    </para>
  </question>
  <answer>
    <para>
      Xprt expects some config data in this directory. Just making it an
      existing but empty dir will work around the error message but will not
      result in a properly working Xprt since it has no (usefull) builtins
      which would make it possible to run the binary without the config data.
      Your X11 binary distribution should always come with the config data
      (for example <filename>/usr/openwin/server/etc/XpConfig/</filename> on Solaris) or you will not
      be able to use Xprint (however it is possible to copy the config data
      from another system :)
      BTW: Source for the configs can be found under <filename>xc/programs/Xserver/XpConfig/</filename>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      My Linux system already shipps with a '<filename>/usr/X11R6/bin/Xprt</filename>'-binary.
      Do I need the binary distribution from <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink> ?
    </para>
  </question>
  <answer>
    <para>
      This depends on what is shipped with your Linux distribution.
      Please check the "vendor" string of the Xprt server:
<screen>
% <userinput>Xprt :10 &amp;</userinput>
% <userinput>xdpyinfo -display :10 | grep -i "vendor string"</userinput>
</screen>
      If this outputs a line like "vendor string:    The XFree86 Project, Inc"
      then you have the Xprt binary build from Xfree86 sources - which are
      broken - even the newest version [I'll update this as soon as Xfree86
      shipps with a working version].
      Xprt from Solaris, HP-UX and my own builds (which identifies itself as
      "vendor string:    xprint.mozdev.org" for releases &gt;= 007, older releases
      (e.g. &lt;= 006) identify itself as as "vendor string:    The X.Org Group")
      are known to work proprtly.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      I am getting the error message "error opening security policy file
      /usr/X11R6/lib/X11/xserver/SecurityPolicy". What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      The policy file for the SECURITY extension cannot be found.
      This is not serious unless you want to make use of features of the
      SECURITY extensions (like treating clients as "untrusted", e.g. restrict
      their access to certain Xserver resources).
      Normally the missing policy file is a problem with your Unix/Linux X11
      distribution; consult your vendor where to get the missing file from.
      Alternatively you can get the plain X11R6.6 security policy file from
      <ulink url="ftp://ftp.x.org/pub/R6.6/xc/programs/Xserver/Xext/SecurityPolicy">ftp://ftp.x.org/pub/R6.6/xc/programs/Xserver/Xext/SecurityPolicy</ulink>
      (copy it to the matching location - but be sure that you do not overwrite any
      existing security policy file).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      I have modified the "HPLJ4family" [or "HPDJ1600C" etc.] printer model to
      work with my PostScript printer, but when I print I get empty places
      where some text should be - what am I doing wrong here ?
    </para>
  </question>
  <answer>
    <para>
      The "HPLJ4family" and "HPDJ1600C" models are PCL-only, check
      the model-config spec
      (<filename><envar>${XPCONFIGDIR}</envar>/C/print/models/${MODEL_NAME}/model-config</filename>) - if the
      "xp-ddx-identifier" attribute says something with "PCL" (like
      "XP-PCL-MONO" etc.) in the value string then this model-config is for
      the PCL-DDX <emphasis>only</emphasis> (e.g. their PMF fonts do not supply the neccesary
      information (e.g. the "_ADOBE_POSTSCRIPT_FONTNAME" chunk is missing;
      they only provide the "PCL_FONT_NAME" chunk) nor are these fonts
      accessible via the PostScript-support in these printers.
      A solution is to use the "PSdefault" model instead (and/or create your
      customized own version of this model) - or look if there is a
      model-config beginning with the same name and ending with "PS" (e.g.
      "HPLJ4family-PS").
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       Xprt outputs warning messages like:
<screen>
<computeroutput>
Xp Extension: Can't load driver XP-PCL-MONO
              init function missing
Xp Extension: Can't load driver XP-RASTER
              init function missing
</computeroutput>
</screen>
       What does that mean ?
    </para>
  </question>
  <answer>
    <para>
      Two possible problems:
      <orderedlist>
        <listitem>
          <para>
            The requested driver is not supported by that version of Xprt.
            For example Solaris 2.7 Xprt does not support XP-PCL-MONO nor the
            XP-RASTER driver.
            Valid values for the "xp-ddx-identifier" attribute in
            <filename><envar>${XPCONFIGDIR}</envar>/*/print/attributes/printers</filename> and/or
            <filename><envar>${XPCONFIGDIR}</envar>/*/print/models/*/model-config</filename> are
            <itemizedlist>
              <listitem>
                <para>
                  Solaris 2.7: XP-POSTSCRIPT and XP-PCL-COLOR
                </para>
              </listitem>
              <listitem>
                <para>
                  Solaris &gt;=2.8: XP-POSTSCRIPT, XP-PCL-COLOR, XP-PCL-MONO and XP-RASTER
                </para>
              </listitem>
              <listitem>
                <para>
                  HP-UX: XP-POSTSCRIPT, XP-PCL-COLOR, XP-PCL-MONO, XP-PCL-LJ3,
                  XP-PCL-DJ1200 and XP-RASTER
                </para>
              </listitem>
              <listitem>
                <para>
                  xprint.mozdev.org release 007: XP-POSTSCRIPT and XP-RASTER
                </para>
              </listitem>
              <listitem>
                <para>
                  xprint.mozdev.org release 008: XP-POSTSCRIPT, XP-PCL-COLOR,
                  XP-PCL-MONO, XP-PCL-LJ3 and XP-RASTER
                </para>
              </listitem>
              <listitem>
                <para>
                  xprint.mozdev.org release &gt;=2.0 (planned): XP-POSTSCRIPT, XP-PCL-COLOR,
                  XP-PCL-MONO, XP-PCL-LJ3, XP-RASTER, XP-PDF and XP-SVGPRINT.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            There may be too many drivers loaded into one Xprt instance.
            By default a single Xserver instance can only handle three screens - and
            since one Xprint DDX maps to one Xserver screen this limit applies to
            the number of loaded Xprt drivers, too.
            Starting with xprint.mozdev.org release 008 the per-Xserver screen limit
            was increased from "3" to "8" to avoid this issue...
            Workaround: Start a 2nd instance of Xprt which handles the other
            drivers which do not fit into the first instance.
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="bug_solaris_xprt_removes_spaces_between_words">
  <question>
    <para>
      Printing on Solaris with Mozilla/Eclipse [or any other Xprint client]
      removes spaces between words. What is going wrong ?
    </para>
  </question>
  <answer>
    <formalpara>
      <title>Cause:</title>
      <para>
        This is a bug in the Solaris Xprint server binary (<filename>/usr/openwin/bin/Xprt</filename>).
        Various bug reports have been filed, see
        <itemizedlist>
          <listitem>
            <para>
              <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=3353">xprint.mozdev.org bug 3353
              ("Solaris Xprt looses space when rendering with '-monotype-arial-*'-fonts")</ulink>
            </para>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=199957">bugzilla.mozilla.org bug 199957 ("Solaris 8 Mozilla
              removes spaces for text within &lt;font face="Arial"&gt;...&lt;/font&gt;"</ulink>)
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </formalpara>

    <formalpara>
      <title>Solution:</title>
      <para>
        Solution:
        Please apply the following OS patches from <ulink url="http://sunsolve.sun.com/">http://sunsolve.sun.com/</ulink>:
        <table frame="all" orient="port" tocentry="1">
          <title>
            Solaris patches to fix <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=3353">xprint.mozdev.org bug 3353
              ("Solaris Xprt looses space when rendering with '-monotype-arial-*'-fonts")</ulink>
          </title>
          <tgroup cols="6" colsep="1" rowsep="1">
            <colspec colname="col_s27_sparc" />
            <colspec colname="col_s27_x86" />
            <colspec colname="col_s28_sparc" />
            <colspec colname="col_s28_x86" />
            <colspec colname="col_s29_sparc" />
            <colspec colname="col_s29_x86" />
            <spanspec spanname="span_s27" namest="col_s27_sparc" nameend="col_s27_x86" align="center" />
            <spanspec spanname="span_s28" namest="col_s28_sparc" nameend="col_s28_x86" align="center" />
            <spanspec spanname="span_s29" namest="col_s29_sparc" nameend="col_s29_x86" align="center" />
            <thead>
              <row>
                <entry spanname="span_s27">Solaris 2.7</entry>
                <entry spanname="span_s28">Solaris 2.8</entry>
                <entry spanname="span_s29">Solaris 2.9</entry>
              </row>
              <row>
                <entry>SPARC</entry>
                <entry>x86</entry>
                <entry>SPARC</entry>
                <entry>x86</entry>
                <entry>SPARC</entry>
                <entry>x86</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><link linkend="bug_solaris_xprt_removes_spaces_between_words_s27_no_patches_yet">n/a</link></entry>
                <entry><link linkend="bug_solaris_xprt_removes_spaces_between_words_s27_no_patches_yet">n/a</link></entry>

                <entry><ulink url="http://sunsolve.sun.com/pub-cgi/retrieve.pl?patchid=108652&amp;collection=fpatches">108652-73</ulink></entry>
                <entry><ulink url="http://sunsolve.sun.com/pub-cgi/retrieve.pl?patchid=108653&amp;collection=fpatches">108653-62</ulink></entry>

                <entry><ulink url="http://sunsolve.sun.com/pub-cgi/retrieve.pl?patchid=112785&amp;collection=fpatches">112785-21</ulink></entry>
                <entry><ulink url="http://sunsolve.sun.com/pub-cgi/retrieve.pl?patchid=112786&amp;collection=fpatches">112786-11</ulink></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <note id="bug_solaris_xprt_removes_spaces_between_words_s27_no_patches_yet">
          <para>
            For Solaris 2.7 (both SPARC and x86 platforms) there are currently
            <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=3353#c24">no patches available</ulink>...
            <literal>;-(</literal>
          </para>
        </note>
      </para>
    </formalpara>

    <formalpara>
      <title>Known workarounds:</title>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              Remove the '-monotype-arial-*' fonts from the font path
            </para>
          </listitem>
          <listitem>
            <para>
              Use an alternate Xprint server like available in the "GISWxprint" package
              (this package is identical to the "GISWxprintglue" package except that it
              uses a Xprint server build from xprint.mozdev.org sources and not the
              <filename>/usr/openwin/bin/Xprt</filename> binary from Solaris)
            </para>
          </listitem>
          <listitem>
            <para>
              Mozilla-only: Adding
<programlisting role="javascript">
  user_pref("print.xprint.font.rejectfontpattern",
  "fname=-dt-.*;scalable=.*;outline_scaled=false;xdisplay=.*;xdpy=.*;ydpy=.*;xdevice=.*|" +
  "fname=-monotype-arial.*;scalable=.*;outline_scaled=.*;xdisplay=.*;xdpy=.*;ydpy=.*;xdevice=.*");
</programlisting>
              to <filename>prefs.js</filename> works around the problem (see
              <ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=199957#c6">bugzilla.mozilla.org bug 199957 comment #6</ulink>,
              too).
              <note>
                <para>
                  Note that this workaround may render various locales completly
                  inaccessible for printing since many of them only employ MonoType fonts.
                </para>
              </note>
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </formalpara>

  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Installation of the "GISWxprint" / "GISWxprintglue" packages fails like this:
<screen># <userinput>pkgadd -d /space/staging/xprint/GISWxprint.pkg</userinput>
<computeroutput>pkgadd: ERROR: no packages were found in &lt;/var/tmp/dstreAAA5Jayyz&gt;</computeroutput></screen>
      Any idea what I am doing wrong ?
    </para>
  </question>
  <answer>
    <para>
      The target machine misses a patch to cure SunSolve bug 4025718 ("pkginfo: allow greater than nine characters for PKG parameter value").
      Please apply the patches listed in the "Installation Requirements" section in the README
      for the <ulink url="http://xprint.mozdev.org/lxr/http/source/xprint/src/xprint_main/xc/packager/solaris/GISWxprint/README">GISWxprint</ulink> /
      <ulink url="http://xprint.mozdev.org/lxr/http/source/xprint/src/xprint_main/xc/packager/solaris/GISWxprintglue/README">GISWxprintglue</ulink> package.
    </para>
  </answer>
</qandaentry>


<qandaentry id="multiple_leading_blank_pages">
  <question>
    <para>
      Printing page results in [two/three/.../16] leading blank pages, followed by a correct (but offset) page.
      Any idea what is going wrong ?
    </para>
  </question>
  <answer>
    <para>
      This symptom depends on the CUPS GhostScript driver used, however the exact cause is currently unknown
      (see comments in <ulink url="http://sdb.suse.de/en/sdb/html/jsmeix_print-81-cups-formfeed.html">SuSE
      support database entry SDB-2002/11/jsmeix_print-81-cups-formfeed ("Blank Pages When Printing with
      CUPS")</ulink>).
    </para>
    <formalpara>
      <title>Solution:</title>
      <para>
        Disable the CUPS accounting functionality in the cupsomatic filter by changing the line
<programlisting>
  my $ps_accounting = 1;
</programlisting>
        to
<programlisting>
  my $ps_accounting = 0;
</programlisting>
        in the filter script <filename>/usr/lib/cups/filter/cupsomatic</filename> as the user root.
        If you use <filename>/etc/foomatic/filter.conf</filename>, disable ps_accounting there.
      </para>
    </formalpara>
    <formalpara>
      <title>References:</title>
      <para>
        <itemizedlist>
          <listitem><para><ulink url="http://sdb.suse.de/en/sdb/html/jsmeix_print-81-cups-formfeed.html">SuSE support database entry SDB-2002/11/jsmeix_print-81-cups-formfeed ("Blank Pages When Printing with CUPS")</ulink></para></listitem>
          <listitem><para><ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=4181">xprint.mozdev.org bug 4181 ("Two empty pages printed first")</ulink></para></listitem>
          <listitem><para><ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=180602#c7">bugzilla.mozilla.org bug 180602 comment #7 ("Printing page results in 16 leading blank pages, followed by a correct, but offset, page")</ulink></para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
  </answer>
</qandaentry>

</qandadiv>


<qandadiv id="faq_development">
<title>Software development</title>

<qandaentry>
  <question>
    <para>
      How does the X print server (Xprt) and the Xlib client side differ
      from the "normal" video Xserver/video client side ?
    </para>
  </question>
  <answer>
    <para>
      The X Print Service expands on the traditional X-Server and Xlib world
      in the following ways:

      <orderedlist>
        <listitem>
          <para>
            Most obvious is the use of "print ddx drivers" instead of
            "video ddx drivers".  While a video ddx driver modifies pixels
            in a video frame buffer, a print ddx driver generates "page
            description language (<link linkend="what_does_pdl_mean">PDL</link>)" output (such as PCL, PDF, PostScript, SVGprint, etc.)
            or sends the print rendering instructions to a platform-specific
            print API (like Win32/GDI).
          </para>
          <para>
            Once a print ddx driver generates <link linkend="what_does_pdl_mean">PDL</link> output, it can be sent to
            a spooler
            (using <function>XpuStartJobToSpooler</function>)
            or retrieved by the client (to implement functionality like "print-to-file"
            with functions such as <function>XpuStartJobToFile</function>).
          </para>
        </listitem>
        <listitem>
          <para>
            Since printers support "paged" output, unlike video, a portion
            of the Xp Extension supports APIs to delineate printed output
            into a print job.
          </para>
          <para>
            A "print job" in Xprint consists of one or more "documents" which itself
            consists of one or more "pages".
          </para>

          <para>
            A client starts a job sequence with <function>XpStartJob</function> and
            ends it with <function>XpEndJob</function> or <function>XpCancelJob</function> to cancel the
            generation of the current print job.
            Any document-specific print attributes MUST be changed before <function>XpStartJob</function>.
          </para>

          <para>
            A client starts a document sequence with <function>XpStartDoc</function> and
            ends it with <function>XpEndDoc</function> or <function>XpCancelDoc</function> to cancel the
            generation of the current document.
            Any document-specific print attributes MUST be changed before <function>XpStartDoc</function>
            or after <function>XpEndDoc</function> (to affect the following document).
          </para>

          <para>
            A client starts a page sequence with <function>XpStartPage</function> and
            ends it with <function>XpEndPage</function> or <function>XpCancelPage</function> to cancel the
            generation of the current page.
            Any page-specific print attributes MUST be changed before <function>XpStartDoc</function>
            or after <function>XpEndDoc</function> (to affect the following document).
          </para>
        </listitem>
        <listitem>
          <para>
            Since printers have extensive capabilities, another portion of
            the Xp Extension supports APIs to manipulate "print contexts".
          </para>
          <para>
            Once a printer is selected using the Xp Extension API, a print
            context to represent it can be created.  A print context
            embodies the printer selected - it contains the printer's
            default capabilities, selectable range of capabilities,
            printer state, and generated output.  Some "attributes" within
            the print context can be modified by the user, and the
            X-Server and print ddx driver will react accordingly.  For
            example, the attribute "content-orientation" can be set to
            "landscape" or "portrait" (if the printer supports these
            values - which can be queried using the Xprint API as well).
          </para>
        </listitem>
        <listitem>
          <para>
            Since printers can have "built in" fonts, the Xp Extension in
            the X-Server works with the print ddx drivers to make
            available (for printing only) additional fonts on a per print
            context basis.
          </para>
          <para>
            When a print context is created and set for a given printer,
            the X font calls may be able to access additional printer
            fonts.  To do this (typically), the X-Server must have access
            to "printer metric files" (.pmf) that describe at minimum the
            metrics of the built in fonts.
          </para>
        </listitem>
        <listitem>
          <para>
            Since printers can have "built in" fonts, the Xp Extension in
            the X-Server works with the print ddx drivers to make
            available (for printing only) additional fonts on a per print
            context basis.
          </para>
          <para>
            When a print context is created and set for a given printer,
            the X rendering calls use the resolution of the current page
            (or if not given, the resolution of the current document or
            the current resolution for this print job).
            The screen's resolution is INVALID in this case.
            XprintUtils has the functions <function>XpuGetResolution</function>
            (to get the current print resolution (searching page, document and
            job level attributes (in that order)), <function>XpuSetPageResolution</function>
            (to set the current page resolution), <function>XpuSetDocResolution</function>
            (to set the current document resolution), <function>XpuGetResolutionList</function> (to
            get the list of all resolutions supported by this printer) and <function>XpuFindResolution</function>
            (to find a resolution in the list returned by <function>XpuGetResolutionList</function>)
            to support getting/setting/queries of resolutions.
          </para>
          <para>
            When a print context is created and set for a given printer,
            the X image rendering calls (such as <function>XPutImage</function> support
            scaling of images.
            The Xp Extension API provides the functions <function>XpSetImageResolution</function>
            and <function>XpSetImageResolution</function> to set and get an image resolution.
            The scaling factor for an image printed on the paper can simply calculated via
            <!-- inlineequation would be better -->
            <literal>scaling_factor = curr_print_resolution_resolution / image_resolution</literal>
            where <varname>curr_print_resolution_resolution</varname> is the value returned by a function such as
            <function>XpuGetResolution</function>, <varname>image_resolution</varname> the resolution passed to
            <function>XpSetImageResolution</function> and <varname>scaling_factor</varname> the resulting scaling factor.
            Note that <function>XpSetImageResolution</function> will failure (=FALSE) when the print DDX
            (for example the RASTER DDX) does not support scaling.
            In that case the application has to scale the image manually.
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I get the printable area (e.g. the portion of the page on which
      the printer is physically capable of placing ink) of the paper after I
      have chosen a paper ?
    </para>
  </question>
  <answer>
    <para>
      The <function>XpGetPageDimensions</function> function returns the printable area and other information
      about the current page geometry.
      Note that the page geometry changes when the page attributes such as <literal>content-orientation</literal>
      or <literal>default-medium</literal> are changed by the application.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Do "offscreen" pixmaps work on Xprt ?
    </para>
  </question>
  <answer>
    <para>
      Yes, "offscreen" pixmaps are working on Xprt.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I get the DPI value for the current Xprt server ? Can I use the
      values from "xdpyinfo" ?
    </para>
  </question>
  <answer>
    <para>
      The Xprt screen resolution defines only the maximum resolution configured
      for the matching DDX, the printers real DPI is obtained via an another
      API (XprintUtil has a bunch of functions to get/set the document/page
      resolution, see <function>XpuGetResolutionList</function>, <function>XpuFreeResolutionList</function>,
      <function>XpuGetResolution</function>, <function>XpuSetPageResolution</function>,
      <function>XpuSetDocResolution</function> and <function>XpuFindResolution</function>).
    </para>
  </answer>
</qandaentry>

<qandaentry id="why_does_xprt_not_support_mitshm">
  <question>
    <para>
      Why does Xprt not offer the MIT-SHM protocol extension ?
    </para>
  </question>
  <answer>
    <para>
      The MIT-SHM protocol extension is partially (<function>XShmPutImage</function> would work,
      but others like <function>XShmGetImage</function> and esp. <function>XShmCreatePixmap</function>
      cannot be implemented properly) incompatible to the way how some of the Xprint DDX are implemented.
      For example the PostScript, PDF, PCL and SVGprint DDX do not rasterize any images on their side - instead they convert the
      stream of X11 rendering instructions into the matching <link linkend="what_does_pdl_mean">PDL</link> instruction stream.
      Only the printer side will (finally) do the rasterisation of the output image. This is the basically the same reason why
      <link linkend="why_does_xgetimage_not_work"><function>XGetImage</function> does not work for those DDXs</link> - and
      functions such as <function>XShmCreatePixmap</function> would be useless since drawing operations on the shared
      pixmap would not be applied to the application (e.g. Xprint client) as well.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Does Xprint/Xprt support font rotation ?
    </para>
  </question>
  <answer>
    <para>
      Yes - Xprint/Xprt supports font rotation at any angle via the matrix XLFD
      enhancement (this even works for printer-builtin fonts !!). For details
      see the paper "New Font Technology for X11R6" by Nathan Meyers (a copy can be found in the
      Xprint.org source tree under <filename>xc/doc/hardcopy/XLFD/x11r6_fonts_94_paper.PS.gz</filename>)
    </para>
    <para>
      Short:
      The transformation-matrix for rotation can be calculated like this:
<programlisting>
+--                    --+
| cos(angle)   sin(angle)|
|                        |
|-sin(angle)   cos(angle)|
+--                    --+
</programlisting>
      Examples:
      <orderedlist>
        <listitem>
          <para>
            the following code fragment obtains a 180 degree rotated font (matrix [-1 0 0 -1]):
<programlisting>
  ... = XLoadQueryFont(..., "-adobe-courier-bold-r-normal--*-[~24 0 0 ~24]-0-0-m-*-iso8859-1");
</programlisting>
          </para>
        </listitem>
        <listitem>
        <para>
          the following code fragment obtains a 90 degree rotated font (matrix [0 1 -1 0]):
<programlisting>
  ... = XLoadQueryFont(..., "-adobe-courier-bold-r-normal--*-[0 24 ~24 0]-0-0-m-*-iso8859-1");
</programlisting>
        </para>
        </listitem>
      </orderedlist>
    </para>
    <para>
      Future versions of Xprint will support the <ulink url="http://stsf.sourceforge.net/">STSF</ulink>
      font API which supports matrix transformations as well.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      When I render something on my window and call <function>XpStartPage</function> all the
      rendered stuff is gone, I only get a white, empty paper.
      What is going wrong here ?
    </para>
  </question>
  <answer>
    <para>
      Remember the rule that "only those drawings are printed on the paper which
      were rendered between <function>XpStartPage</function> and <function>XpEndPage</function>".
      <function>XpStartPage</function> clears the window you passed as argument, e.g. it creates
      a new, blank sheet of paper where you can do your rendering stuff on.
      <function>XpEndpage</function> then pushes the "paper sheet" to the stash of papers from the
      document in process.

      <tip>
        <para>
          If you want to render something once for multiple or all pages:
          Render on a offscreen pixmap and copy (with <function>XCopyArea</function>) the content to
          the "paper" drawable (after calling <function>XpStartPage</function>) - <function>XpStartpage</function> only
          affects the window passed as parameter.
        </para>
      </tip>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      What is <function>XpStartDoc</function> for ?
    </para>
  </question>
  <answer>
    <para>
      ISO 10175 and some advanced printing systems by IBM and HP had set forth
      the standard that a "Job" is made up of one or more "Documents", and
      each document is made up of one or more "Pages". Xprint was designed that
      in a true ISO 10175 environment/implementation (<citerefentry><refentrytitle>lp</refentrytitle><manvolnum>1</manvolnum></citerefentry> on steroids, and
      with an API), Xprt can actually learn about all printers and their
      capabilities though API's into the printer subsystem (vs. using config
      files), map Job/Doc/Page directly into ISO 10175 equivalents, and use
      APIs to view job status and kill jobs (vs.
      <citerefentry><refentrytitle>cancel</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>lpcancel</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>lpstatus</refentrytitle><manvolnum>1</manvolnum></citerefentry>).
      Because most applications of the day are only printing one document per
      job, <function>XpStartPage</function> was designed that it generates a "synthetic"
      <function>XpStartDoc</function> if it has not been called yet.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How does the XLFD for printer-builtin fonts look like ? / How can I find/identify printer-builtin fonts ?
    </para>
  </question>
  <answer>
    <para>
      There is no special XLFD scheme for printer-builtin fonts.
      Instead the <literal>xp-listfonts-modes-supported</literal> is used to define
      whether <function>XListFonts</function> and co. return printer-builtin fonts or not.
      By default the attribute looks is set to
      <literal>*xp-listfonts-modes-supported:  xp-list-internal-printer-fonts xp-list-glyph-fonts</literal> which defines
      thaht <function>XListFonts</function> and co. return both printer-builtin and normal fonts.
      Removing <literal>xp-list-internal-printer-fonts</literal> will make printer-builtin fonts disappear,
      removing <literal>xp-list-glyph-fonts</literal> will make normal glyph fonts disappear from font lists.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How can I scale images using the Xprint API ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      Can I pass my own PostScript code (fragment) to the print spooler instead of letting
      Xprt's PostScript DDX generate it ?
    </para>
  </question>
  <answer>
    <para>
      XXX <!-- use XpPutDocumentData -->
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      When I use <function>XpPutDocumentData</function> I get a
      <literal>BadValue</literal> X protocol error. Any idea what am I doing wrong ?
    </para>
  </question>
  <answer>
    <para>
      XXX
      <!-- references: bugzilla.mozilla.org bug and xprint.mozdev.org bug about the case sensitivy -->
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How do I use the XprintUtil library ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry id="why_does_xgetimage_not_work">
  <question>
    <para>
      Why does the <function>XGetImage</function> not work for Xprt ?
    </para>
  </question>
  <answer>
    <para>
      There are at least three reasons why <function>XGetImage</function> does not work for Xprt:
      <orderedlist>
        <listitem>
          <para>
            Most of the Xprt DDX implementations do not render itself on any
            bitmaps like the framebuffer(=video) DDX do, they translate the
            rendering commands into the matching commands of the printer language
            (it is technically possible to implement such support for <function>XGetImage</function>
            even for those drivers - but there are more reasons:)
          </para>
        </listitem>
        <listitem>
          <para>
            Xprt usually operates at high resolutions which results in very large
            dimensions. If a client would request the 24bit TrueColor <emphasis>bitmap</emphasis>
            data for a <emphasis>whole</emphasis> DIN-A4 page at 2400 DPI a data chunk of ~173
            megabytes would be the response. This would be more or less a
            DOS(=Denial of Service) for either the client, the network and/or the
            server.
          </para>
        </listitem>
        <listitem>
          <para>
            The printer-builtin fonts only provide metrics information - there is no real "outline"
            information at that time (these fonts reside only in the printer's ROM and are only
            available at the time the printer rasterizes the incoming <link linkend="what_does_pdl_mean">PDL</link>
            (e.g. PCL/PostScript) data stream) which could be used to rasterize the matching glyphs
            (which means: A <function>XGetImage</function> implementation would return image
            data but glyphs rendered using the printer-builtin fonts would be missing).
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How to print with Xt/Athena widgets ?
    </para>
  </question>
  <answer>
    <para>
      There are two examples in the Xprint.org and X11R6.8.0 source trees which demonstrate how to use Xprint using
      Athena widgets:
      <orderedlist>
        <listitem>
          <para>
            <filename>xc/programs/xphelloworld/xpawhelloworld/</filename> contains a simple
            demo application which prints a Athena widget using the <function>XawPrintShell</function> widget class.
          </para>
        </listitem>
        <listitem>
          <para>
            <filename>xc/programs/xphelloworld/xpxthelloworld/</filename> contains a simple
            demo application which prints a Athena widget without using a special print
            widget class (however, if possible a print shell such as <function>XawPrintShell</function> or
            <function>XmPrintShell</function> should be used since this is the easier way to add print
            support to an Athena application).
          </para>
        </listitem>
      </orderedlist>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How to print with Xt/Motif widgets ?
    </para>
  </question>
  <answer>
    <para>
      The Xprint.org source tree contains the xpxmhelloworld (xc/programs/xphelloworld/xpxmhelloworld/)
      application to demonstrate how to print using the Motif2 toolkit.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      What are the differences between normal display and Xprint display ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      How do I scale images ?
    </para>
  </question>
  <answer>
    <para>
      XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
      libXp Image scaling vs. max. request size ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       How can I use XprintUtils ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       How do I calculate the DPI values for Xprt DDX screens ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       How do I find scaleable fonts ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       How do I find printer-builtin fonts ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       The XLFD for Printer-builtin fonts look like bitmap fonts - is that bad ?
    </para>
  </question>
  <answer>
    <para>
       No, this is not "bad". The XLFD of a printer-builtin font only looks like a bitmap font since
       the *.pmf (Printer metrics file) format is a PCF file format variant (the DPI values in the XLFD
       AFAIK specifies the resolution which was used for generating the metrics) - however this does not
       change the fact that the printer-builtin fonts are outline scaleable fonts these fonts reside in the
       printer's ROM).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       When printing using the <function>XawPrintShell</function>/<function>XmPrintShell</function> print shells my PostScript output
       is always corrupt. What am I doing wrong ?
    </para>
  </question>
  <answer>
    <para>
       Make sure the widgets (such as text input widgets) have the (blinking) cursor turned-off.
       Setting the <literal>XmNcursorPositionVisible,</literal> to <literal>False</literal> usually
       solves the problem (for Motif2 widgets).
       Example:
       <informalexample>
<programlisting>
...
XtSetArg(args[n], XmNcursorPositionVisible, False);
...
</programlisting>
       </informalexample>
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       When printing using the <function>XawPrintShell</function>/<function>XmPrintShell</function>
       print shells I always get a grey/dithered background on paper.
       Any idea how to change that to "white" ?
    </para>
  </question>
  <answer>
    <para>
       XXX
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <para>
       Are there any caveats/suggestions when printing via Xt/Motif2 widgets ?
    </para>
  </question>
  <answer>
    <para>
       There are a couple of Xt resources which may likely differ from the normal values (e.g. those values
       used for a video Xserver):
       <variablelist>
         <varlistentry>
           <term><literal>Core</literal> class level</term>
           <listitem>
             <para>
               <variablelist>
                 <varlistentry>
                   <term><literal>XmNbackground</literal> resource</term>
                   <listitem>
                     <para>
                       The application will probably want to set the <literal>XmNbackground</literal> resource
                       to "white" to match the default paper color.
                     </para>
                   </listitem>
                 </varlistentry>
                 <varlistentry>
                   <term><literal>XmNborderWidth</literal> resource</term>
                   <listitem>
                     <para>
                       The application will probably want to set the <literal>XmNborderWidth</literal> resource
                       to "0" (usually the default value) to avoid that a black border appears around the widget.
                     </para>
                   </listitem>
                 </varlistentry>
               </variablelist>
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><function>XmPrimitive</function> class</term>
           <listitem>
             <para>
               <variablelist>
                 <varlistentry>
                   <term><literal>XmNshadowThickness</literal> and <literal>XmNhightlightThickness</literal> resources</term>
                   <listitem>
                     <para>
                       The application will probably want to set <literal>XmNshadowThickness</literal> and
                       <literal>XmNhightlightThickness</literal> to "0" (usually the default value) to avoid
                       3D border effects on the printout (depends on application and author's preference...
                       <literal>:-)</literal>).
                     </para>
                   </listitem>
                 </varlistentry>
               </variablelist>
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><function>XmText</function> and <literal>XmTextField</literal> classes</term>
           <listitem>
             <para>
               <variablelist>
                 <varlistentry>
                   <term><literal>XmNcursorPositionVisible</literal> resource</term>
                   <listitem>
                     <para>
                       The application will probably want to set <literal>XmNcursorPositionVisible</literal>
                       to <literal>False</literal> to avoid that the cursor is visible on printouts (and to avoid
                       problems with some nasty implementation details which may cause corrupted PostScript output).
                     </para>
                   </listitem>
                 </varlistentry>
                 <varlistentry>
                   <term><literal>XmNscrollHorizontal</literal> and <literal>XmNscrollVertical</literal> resources</term>
                   <listitem>
                     <para>
                       The application will probably want to set the <literal>XmNscrollHorizontal</literal> and
                       <literal>XmNscrollVertical</literal> resources to <literal>False</literal> to suppress printing
                       of scrollbars (on paper "scrolling" is replaced with "pagination" except for rare exceptions
                       (like 1:1 WYSIWYG-printing)).
                     </para>
                   </listitem>
                 </varlistentry>
                 <varlistentry>
                   <term><literal>XmNmarginWidth</literal> and <literal>XmNmarginHeight</literal> resources</term>
                   <listitem>
                     <para>
                       The application will probably want to recalculate the <literal>XmNmarginWidth</literal> and
                       <literal>XmNmarginHeight</literal> resources based on the (far) higher print resolution
                       (or reverse: set them to "0" - depending on what style matches
                       the application needs better...).
                     </para>
                   </listitem>
                 </varlistentry>
               </variablelist>
             </para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><function>XmLabel</function> class</term>
           <listitem>
             <para>
               <variablelist>
                 <varlistentry>
                   <term><literal>XmNmarginTop</literal>, <literal>XmNmarginBottom</literal>,
                         <literal>XmNmarginRight</literal>, <literal>XmNmarginLeft</literal>,
                         <literal>XmNmarginWidth</literal>, <literal>XmNmarginHeight</literal> and
                         <literal>XmNalignment</literal> resources</term>
                   <listitem>
                     <para>
                       The application will probably want to use different value for <literal>XmLabel</literal> class's
                       <literal>XmNmarginTop</literal>, <literal>XmNmarginBottom</literal>, <literal>XmNmarginRight</literal>,
                       <literal>XmNmarginLeft</literal>, <literal>XmNmarginWidth</literal>, <literal>XmNmarginHeight</literal> and
                       <literal>XmNalignment</literal> resources. These resources are mainly usefull when the widget holds a
                       border, highlight or shadow of some kind. If borders are not to be transferred there is no real need to transfer
                       a margin either.
                     </para>
                   </listitem>
                 </varlistentry>
               </variablelist>
             </para>
           </listitem>
         </varlistentry>

       </variablelist>
    </para>
  </answer>
</qandaentry>

<qandaentry id="changing_page_attributes_on_the_fly_when_using_printshells">
  <question>
    <para>
       Can I change the paper size/resolution/page orientation/etc. when printing using the
       <function>XawPrintShell</function>/<function>XmPrintShell</function> print shells ?
    </para>
  </question>
  <answer>
    <para>
       Yes, it is allowed to change the page attributes in the page setup callback
       (e.g. <literal>XawNpageSetupCallback</literal> or <literal>XmNpageSetupCallback</literal>)
       since this callback is always called before <function>XpStartPage</function>
       (for the 2nd and following pages: between <function>XpEndPage</function> and
       <function>XpStartPage</function>).
       Note that changing page attributes will automagically update the print shell widget size
       (e.g. attributes <literal>XawNminX</literal>, <literal>XawNminY</literal>, <literal>XawNmaxX</literal> and <literal>XawNmaxX</literal> (<function>XawPrintShell</function>)
       or
       <literal>XmNminX</literal>, <literal>XmNminY</literal>, <literal>XmNmaxX</literal> and <literal>XmNmaxX</literal> (<function>XmPrintShell</function>) are updated based
       on events send by the Xp Extension and then the print shell is resized based on the new values (<function>XawPrintShell</function> is slightly more flexible
       since the size mode can be defined using the <literal>XawNlayoutMode</literal> attribute)).
    </para>
  </answer>
</qandaentry>

<qandaentry id="examples_for_using_glx">
  <question>
    <para>
      Where can I find an example how to print with Xprint using the OpenGL/GLX API ?
    </para>
  </question>
  <answer>
    <para>
      In Xorg release 6.8.0 Xprint support was added to the GLX demo application "glxgears"
      (<ulink url="http://xprint.freedesktop.org/cgi-bin/viewcvs.cgi/xorg/xc/programs/glxgears/">xc/programs/Xserver/glxgears/</ulink>).
    </para>
  </answer>
</qandaentry>

</qandadiv>
</qandaset>
</simplesect>


<simplesect id="knownbugs">
<title>Known bugs</title>
<qandaset>
<qandadiv>
<qandaentry>
  <question>
    <label>Problem</label>
    <para>
      Xprt build from Xfree86 sources is completely broken and unuseable.
    </para>
  </question>
  <answer>
    <label>Solution</label>
    <para>
      Build Xprt from the CVS tree at <ulink url="http://xprint.mozdev.org/">http://xprint.mozdev.org/</ulink> or the
      X.org X11R6.5.1 sources (note that the client side Xprint extension
      library ("<filename>libXp.so</filename>") from Xfree86 is not broken and do not need to be
      replaced).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <label>Problem</label>
    <para>
      The code which matches XLFD names to PS Type1 font names is
      case-sensitive in Xprts build from X.org X11R6.5.1/X11R6.6 and the
      current Solaris Xprt. This may cause that the PS DDX refuses to
      download PS Type1 fonts.
    </para>
  </question>
  <answer>
    <label>Solution</label>
    <para>
      Patch available, I am looking for a way to get the patch into the X11
      and Solaris source trees...
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <label>Problem</label>
    <para>
      Xprt build from X11R6.5.1/X11R6.6 sources and Solaris's version of
      Xprt can only download PFA (PS ASCII font) fonts which ends of the
      ending "*.pfa".
    </para>
  </question>
  <answer>
    <label>Solution</label>
    <para>
      Either convert PFB (PS Type 1 binary font) to PFA format and adjust
      the <filename>fonts.dir</filename> and <filename>fonts.scale</filename> file or get a patch for the sources.
      I am looking for a way to get the patch into the X11 and Solaris
      source trees (the fixed version can download both PFA/PFB fonts in
      PFA format and even handles non-standard file extensions).
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question>
    <label>Problem</label>
    <para>
      There is an issue how the Linux and Solaris Xprt handles the
      "copy-count" of a print job. The result may be that a job with n
      copies of a document end-up in n jobs with n copies (usually equals
      to n^2 copies).
    </para>
  </question>
  <answer>
    <label>Solution</label>
    <para>
      Xprt build from xprint.mozdev.org sources has been fixed in release
      007, see <ulink url="http://xprint.mozdev.org/bugs/show_bug.cgi?id=1378">xprint.mozdev.org bug 1378
      ("PS DDX creates n^2 copies of a job instead of n copies")</ulink> and
      <ulink url="http://bugzilla.mozilla.org/show_bug.cgi?id=140030">bugzilla.mozilla.org 140030
      ("Setting number of copies causes too many copies to print")</ulink> for details.
      Solaris 2.7 Xprt still suffers from this issue... <literal>;-(</literal>
    </para>
  </answer>
</qandaentry>

</qandadiv>
</qandaset>
</simplesect>


<simplesect id="unanswered_questions">
  <title>Unanswered questions</title>
  <para>
    (My small ToDo list what I will write soon; 379 items missing... <literal>=:-)</literal>
    Email me if you want one of these answered "now" and/or to contribute
    an answer... :)
    <simplelist type="vert">
      <member>How do I create a model-config for my printer ?</member>
      <member>How can I customize a model-config for my site/machine ?</member>
      <member>Which attributes/values can be set in a model-config ?</member>
      <member>Why can't I set default values (for my {paper size, resolution, ...}) in the model-config ?</member>
      <member>Should I add the fonts in the model-config dir to the Xserver's font path ?</member>
      <member>What are the fonts in the model-config dir for ?</member>
      <member>Can I use a font server for all fonts instead of passing then directly to the Xprint server ?</member>
      <member>Does the Xprint PostScript driver do full rasterisation of the print job ?</member>
      <member>Is it possible to prepare a printer config entry so that the PS
              output is piped to "ps2pdf" and will produce directly a PDF file?
              It would be nice to have mozilla directly producing PDF files when
              printing.
      </member>
      <member>Problem: I have changed the Xprt config - but "xplsprinters -l"</member>
      <member>(or any other Xprint application) does not show the change.</member>
      <member>Any idea what I am doing wrong ?</member>
      <member>How can I add a font path to Xprt ?</member>
      <member>Why does "xset +fp path_to_font" not work in some cases ?</member>
      <member>How can I get a "core"-dump when Xprt crashes ?</member>
      <member>How can I debug Xprt (hint: use "-audit 4") ?</member>
      <member>How can I debug Xprt with Sun Workshop (hint: "check -access") ?</member>
      <member>How can I check whether Xprint is "active" ? / How can I verify that a Xprint is working ?</member>
    </simplelist>
  </para>
</simplesect>

<simplesect id="acknowledgements">
  <title>Acknowledgements</title>
  <para>
    We'd like like to express their gratitude to the whole community for
    providing insightful answers to innumerable questions. In particular,
    the following people (listed alphabetically) have contributed to this
    FAQ (apologies, in advance, if anyone has been forgotten):
  </para>
  <para>
    <simplelist type="vert">
      <member><othercredit><firstname>Alan</firstname> <surname>Coopersmith</surname></othercredit> <email>alan.coopersmith@sun.com</email></member>
      <member><othercredit><firstname>Giuseppe</firstname> <surname>Ghib&ograve;</surname> </othercredit> <email>ghibo@mandrakesoft.com</email></member>
      <member><othercredit><firstname>Thomas</firstname> <surname>Gilg</surname> </othercredit> <email>thomas_gilg@hp.com</email></member>
      <member><othercredit><firstname>Jay</firstname> <surname>Hobson</surname> </othercredit> <email>jay.hobson@sun.com</email></member>
      <member><othercredit><firstname>Masaki</firstname> <surname>Katakai</surname> </othercredit> <email>katakai@japan.sun.com</email></member>
      <member><othercredit><firstname>Simon</firstname> <surname>Montagu</surname> </othercredit> <email>smontagu@smontagu.org</email></member>
      <member><othercredit><firstname>Drew</firstname> <surname>Parsons</surname> </othercredit> <email>dparsons@debian.org</email></member>
      <member>(and many many others)</member>
    </simplelist>
  </para>
</simplesect>


</article>

<!-- # EOF. -->

